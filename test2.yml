.: {}
.aider.tags.cache.v3: {}
.devcontainer: {}
.git:
  hooks: {}
  info: {}
  logs:
    refs:
      heads: {}
      remotes:
        origin: {}
        upstream: {}
  objects:
    '07': {}
    '17': {}
    1d: {}
    '21': {}
    '22': {}
    '29': {}
    2d: {}
    2f: {}
    '35': {}
    '40': {}
    4a: {}
    4b: {}
    '58': {}
    '63': {}
    '65': {}
    6a: {}
    6c: {}
    6e: {}
    '72': {}
    '73': {}
    '74': {}
    7c: {}
    7e: {}
    '86': {}
    8c: {}
    '94': {}
    '95': {}
    9f: {}
    a0: {}
    a2: {}
    a6: {}
    b1: {}
    b4: {}
    b5: {}
    b9: {}
    bf: {}
    d1: {}
    e6: {}
    ea: {}
    ee: {}
    f5: {}
    f7: {}
    f8: {}
    fb: {}
    fe: {}
    ff: {}
    info: {}
    pack: {}
  refs:
    heads: {}
    remotes:
      origin: {}
      upstream: {}
    tags: {}
.github:
  ISSUE_TEMPLATE: {}
  workflows: {}
__pycache__: {}
assets: {}
config:
  commands: {}
  configs: {}
  environment_setup: {}
docker: {}
docs:
  assets: {}
  background: {}
  config: {}
  dev: {}
  installation: {}
  overrides: {}
  reference: {}
  usage: {}
inspector:
  icons: {}
make_demos: {}
scripts: {}
sweagent:
  __pycache__: {}
  agent:
    __pycache__: {}
  api:
    __pycache__: {}
  environment:
    __pycache__: {}
  frontend:
    node_modules:
      .bin: {}
      .cache:
        babel-loader: {}
        default-development: {}
      '@aashutoshrathi':
        word-wrap: {}
      '@adobe':
        css-tools:
          dist: {}
      '@alloc':
        quick-lru: {}
      '@ampproject':
        remapping:
          dist:
            types: {}
      '@babel':
        code-frame:
          lib: {}
        compat-data:
          data: {}
        core:
          lib:
            config:
              files: {}
              helpers: {}
              validation: {}
            errors: {}
            gensync-utils: {}
            parser:
              util: {}
            tools: {}
            transformation:
              file: {}
              util: {}
            vendor: {}
          node_modules:
            .bin: {}
            semver:
              bin: {}
          src:
            config:
              files: {}
        eslint-parser:
          lib:
            convert: {}
            utils: {}
            worker: {}
          node_modules:
            .bin: {}
            eslint-visitor-keys:
              lib: {}
            semver:
              bin: {}
        generator:
          lib:
            generators: {}
            node: {}
        helper-annotate-as-pure:
          lib: {}
        helper-builder-binary-assignment-operator-visitor:
          lib: {}
        helper-compilation-targets:
          lib: {}
          node_modules:
            .bin: {}
            semver:
              bin: {}
        helper-create-class-features-plugin:
          lib: {}
          node_modules:
            .bin: {}
            semver:
              bin: {}
        helper-create-regexp-features-plugin:
          lib: {}
          node_modules:
            .bin: {}
            semver:
              bin: {}
        helper-define-polyfill-provider:
          esm: {}
          lib:
            browser: {}
            node: {}
            visitors: {}
        helper-environment-visitor:
          lib: {}
        helper-function-name:
          lib: {}
        helper-hoist-variables:
          lib: {}
        helper-member-expression-to-functions:
          lib: {}
        helper-module-imports:
          lib: {}
        helper-module-transforms:
          lib: {}
        helper-optimise-call-expression:
          lib: {}
        helper-plugin-utils:
          lib: {}
        helper-remap-async-to-generator:
          lib: {}
        helper-replace-supers:
          lib: {}
        helper-simple-access:
          lib: {}
        helper-skip-transparent-expression-wrappers:
          lib: {}
        helper-split-export-declaration:
          lib: {}
        helper-string-parser:
          lib: {}
        helper-validator-identifier:
          lib: {}
          scripts: {}
        helper-validator-option:
          lib: {}
        helper-wrap-function:
          lib: {}
        helpers:
          lib:
            helpers: {}
          scripts: {}
        highlight:
          lib: {}
        parser:
          bin: {}
          lib: {}
          typings: {}
        plugin-bugfix-firefox-class-in-computed-class-key:
          lib: {}
        plugin-bugfix-safari-id-destructuring-collision-in-function-expression:
          lib: {}
        plugin-bugfix-v8-spread-parameters-in-optional-chaining:
          lib: {}
        plugin-bugfix-v8-static-class-fields-redefine-readonly:
          lib: {}
        plugin-proposal-class-properties:
          lib: {}
        plugin-proposal-decorators:
          lib: {}
        plugin-proposal-nullish-coalescing-operator:
          lib: {}
        plugin-proposal-numeric-separator:
          lib: {}
        plugin-proposal-optional-chaining:
          lib: {}
        plugin-proposal-private-methods:
          lib: {}
        plugin-proposal-private-property-in-object:
          lib: {}
        plugin-syntax-async-generators:
          lib: {}
        plugin-syntax-bigint:
          lib: {}
        plugin-syntax-class-properties:
          lib: {}
        plugin-syntax-class-static-block:
          lib: {}
        plugin-syntax-decorators:
          lib: {}
        plugin-syntax-dynamic-import:
          lib: {}
        plugin-syntax-export-namespace-from:
          lib: {}
        plugin-syntax-flow:
          lib: {}
        plugin-syntax-import-assertions:
          lib: {}
        plugin-syntax-import-attributes:
          lib: {}
        plugin-syntax-import-meta:
          lib: {}
        plugin-syntax-json-strings:
          lib: {}
        plugin-syntax-jsx:
          lib: {}
        plugin-syntax-logical-assignment-operators:
          lib: {}
        plugin-syntax-nullish-coalescing-operator:
          lib: {}
        plugin-syntax-numeric-separator:
          lib: {}
        plugin-syntax-object-rest-spread:
          lib: {}
        plugin-syntax-optional-catch-binding:
          lib: {}
        plugin-syntax-optional-chaining:
          lib: {}
        plugin-syntax-private-property-in-object:
          lib: {}
        plugin-syntax-top-level-await:
          lib: {}
        plugin-syntax-typescript:
          lib: {}
        plugin-syntax-unicode-sets-regex:
          lib: {}
        plugin-transform-arrow-functions:
          lib: {}
        plugin-transform-async-generator-functions:
          lib: {}
        plugin-transform-async-to-generator:
          lib: {}
        plugin-transform-block-scoped-functions:
          lib: {}
        plugin-transform-block-scoping:
          lib: {}
        plugin-transform-class-properties:
          lib: {}
        plugin-transform-class-static-block:
          lib: {}
        plugin-transform-classes:
          lib: {}
        plugin-transform-computed-properties:
          lib: {}
        plugin-transform-destructuring:
          lib: {}
        plugin-transform-dotall-regex:
          lib: {}
        plugin-transform-duplicate-keys:
          lib: {}
        plugin-transform-dynamic-import:
          lib: {}
        plugin-transform-exponentiation-operator:
          lib: {}
        plugin-transform-export-namespace-from:
          lib: {}
        plugin-transform-flow-strip-types:
          lib: {}
        plugin-transform-for-of:
          lib: {}
        plugin-transform-function-name:
          lib: {}
        plugin-transform-json-strings:
          lib: {}
        plugin-transform-literals:
          lib: {}
        plugin-transform-logical-assignment-operators:
          lib: {}
        plugin-transform-member-expression-literals:
          lib: {}
        plugin-transform-modules-amd:
          lib: {}
        plugin-transform-modules-commonjs:
          lib: {}
        plugin-transform-modules-systemjs:
          lib: {}
        plugin-transform-modules-umd:
          lib: {}
        plugin-transform-named-capturing-groups-regex:
          lib: {}
        plugin-transform-new-target:
          lib: {}
        plugin-transform-nullish-coalescing-operator:
          lib: {}
        plugin-transform-numeric-separator:
          lib: {}
        plugin-transform-object-rest-spread:
          lib: {}
        plugin-transform-object-super:
          lib: {}
        plugin-transform-optional-catch-binding:
          lib: {}
        plugin-transform-optional-chaining:
          lib: {}
        plugin-transform-parameters:
          lib: {}
        plugin-transform-private-methods:
          lib: {}
        plugin-transform-private-property-in-object:
          lib: {}
        plugin-transform-property-literals:
          lib: {}
        plugin-transform-react-constant-elements:
          lib: {}
        plugin-transform-react-display-name:
          lib: {}
        plugin-transform-react-jsx:
          lib: {}
        plugin-transform-react-jsx-development:
          lib: {}
        plugin-transform-react-pure-annotations:
          lib: {}
        plugin-transform-regenerator:
          lib: {}
        plugin-transform-reserved-words:
          lib: {}
        plugin-transform-runtime:
          lib:
            babel-7: {}
            get-runtime-path: {}
          node_modules:
            .bin: {}
            semver:
              bin: {}
          src:
            get-runtime-path: {}
        plugin-transform-shorthand-properties:
          lib: {}
        plugin-transform-spread:
          lib: {}
        plugin-transform-sticky-regex:
          lib: {}
        plugin-transform-template-literals:
          lib: {}
        plugin-transform-typeof-symbol:
          lib: {}
        plugin-transform-typescript:
          lib: {}
        plugin-transform-unicode-escapes:
          lib: {}
        plugin-transform-unicode-property-regex:
          lib: {}
        plugin-transform-unicode-regex:
          lib: {}
        plugin-transform-unicode-sets-regex:
          lib: {}
        preset-env:
          data: {}
          lib:
            polyfills: {}
          node_modules:
            .bin: {}
            semver:
              bin: {}
        preset-modules:
          lib:
            plugins:
              transform-async-arrows-in-class: {}
              transform-edge-default-parameters: {}
              transform-edge-function-name: {}
              transform-jsx-spread: {}
              transform-safari-block-shadowing: {}
              transform-safari-for-shadowing: {}
              transform-tagged-template-caching: {}
          src:
            plugins:
              transform-async-arrows-in-class: {}
              transform-edge-default-parameters: {}
              transform-edge-function-name: {}
              transform-jsx-spread: {}
              transform-safari-block-shadowing: {}
              transform-safari-for-shadowing: {}
              transform-tagged-template-caching: {}
        preset-react:
          lib: {}
        preset-typescript:
          lib: {}
        regjsgen: {}
        runtime:
          helpers:
            esm: {}
          regenerator: {}
        template:
          lib: {}
        traverse:
          lib:
            path:
              inference: {}
              lib: {}
            scope:
              lib: {}
        types:
          lib:
            asserts:
              generated: {}
            ast-types:
              generated: {}
            builders:
              flow: {}
              generated: {}
              react: {}
              typescript: {}
            clone: {}
            comments: {}
            constants:
              generated: {}
            converters: {}
            definitions: {}
            modifications:
              flow: {}
              typescript: {}
            retrievers: {}
            traverse: {}
            utils:
              react: {}
            validators:
              generated: {}
              react: {}
      '@bcoe':
        v8-coverage:
          dist:
            lib:
              _src: {}
          src:
            lib: {}
            test: {}
      '@csstools':
        normalize.css: {}
        postcss-cascade-layers:
          dist: {}
        postcss-color-function:
          dist:
            css-color-4: {}
        postcss-font-format-keywords:
          dist: {}
        postcss-hwb-function:
          dist: {}
        postcss-ic-unit:
          dist: {}
        postcss-is-pseudo-class:
          dist:
            split-selectors:
              complex: {}
        postcss-nested-calc:
          dist: {}
        postcss-normalize-display-values:
          dist: {}
        postcss-oklab-function:
          dist:
            css-color-4: {}
        postcss-progressive-custom-properties:
          dist:
            custom: {}
        postcss-stepped-value-functions:
          dist: {}
        postcss-text-decoration-shorthand:
          dist: {}
        postcss-trigonometric-functions:
          dist: {}
        postcss-unset-value:
          dist: {}
        selector-specificity:
          dist: {}
      '@eslint':
        eslintrc:
          conf: {}
          dist: {}
          lib:
            config-array: {}
            shared: {}
          node_modules:
            .bin: {}
            argparse:
              lib: {}
            globals: {}
            js-yaml:
              bin: {}
              dist: {}
              lib:
                schema: {}
                type: {}
            type-fest:
              source: {}
              ts41: {}
        js:
          src:
            configs: {}
      '@eslint-community':
        eslint-utils: {}
        regexpp: {}
      '@humanwhocodes':
        config-array: {}
        module-importer:
          dist: {}
          src: {}
        object-schema:
          src: {}
      '@isaacs':
        cliui:
          build:
            lib: {}
          node_modules:
            ansi-regex: {}
            ansi-styles: {}
            string-width: {}
            strip-ansi: {}
            wrap-ansi: {}
      '@istanbuljs':
        load-nyc-config:
          node_modules:
            camelcase: {}
            find-up: {}
            locate-path: {}
            p-limit: {}
            p-locate: {}
        schema: {}
      '@jest':
        console:
          build: {}
          node_modules:
            ansi-styles: {}
            chalk:
              source: {}
            color-convert: {}
            color-name: {}
            has-flag: {}
            supports-color: {}
        core:
          build:
            assets: {}
            cli: {}
            lib: {}
            plugins: {}
          node_modules:
            ansi-styles: {}
            chalk:
              source: {}
            color-convert: {}
            color-name: {}
            has-flag: {}
            supports-color: {}
        environment:
          build: {}
        expect-utils:
          build: {}
          node_modules:
            jest-get-type:
              build: {}
        fake-timers:
          build: {}
        globals:
          build: {}
        reporters:
          build: {}
          node_modules:
            ansi-styles: {}
            chalk:
              source: {}
            color-convert: {}
            color-name: {}
            has-flag: {}
            source-map:
              dist: {}
              lib: {}
            supports-color: {}
        schemas:
          build: {}
        source-map:
          build: {}
          node_modules:
            source-map:
              dist: {}
              lib: {}
        test-result:
          build: {}
        test-sequencer:
          build: {}
        transform:
          build: {}
          node_modules:
            ansi-styles: {}
            chalk:
              source: {}
            color-convert: {}
            color-name: {}
            convert-source-map: {}
            has-flag: {}
            source-map:
              dist: {}
              lib: {}
            supports-color: {}
        types:
          build: {}
          node_modules:
            ansi-styles: {}
            chalk:
              source: {}
            color-convert: {}
            color-name: {}
            has-flag: {}
            supports-color: {}
      '@jridgewell':
        gen-mapping:
          dist:
            types: {}
        resolve-uri:
          dist:
            types: {}
        set-array:
          dist:
            types: {}
        source-map:
          dist:
            types: {}
        sourcemap-codec:
          dist:
            types: {}
        trace-mapping:
          dist:
            types: {}
      '@leichtgewicht':
        ip-codec:
          types: {}
      '@nicolo-ribaudo':
        eslint-scope-5-internals:
          node_modules:
            eslint-scope:
              lib: {}
            estraverse: {}
      '@nodelib':
        fs.scandir:
          out:
            adapters: {}
            providers: {}
            types: {}
            utils: {}
        fs.stat:
          out:
            adapters: {}
            providers: {}
            types: {}
        fs.walk:
          out:
            providers: {}
            readers: {}
            types: {}
      '@opencensus':
        core:
          build:
            src:
              common: {}
              exporters: {}
              internal: {}
              metrics:
                export: {}
                gauges: {}
              resource: {}
              stats: {}
              tags: {}
              trace:
                config: {}
                instrumentation: {}
                model: {}
                propagation: {}
                sampler: {}
          node_modules:
            .bin: {}
            semver:
              bin: {}
            uuid:
              bin: {}
              lib: {}
        propagation-b3:
          build:
            src: {}
          node_modules:
            .bin: {}
            '@opencensus':
              core:
                build:
                  src:
                    common: {}
                    exporters: {}
                    internal: {}
                    metrics:
                      export: {}
                      gauges: {}
                    resource: {}
                    stats: {}
                    trace:
                      config: {}
                      instrumentation: {}
                      model: {}
                      propagation: {}
                      sampler: {}
            semver:
              bin: {}
            uuid:
              bin: {}
              lib: {}
      '@pkgjs':
        parseargs:
          examples: {}
          internal: {}
      '@pm2':
        agent:
          .vscode: {}
          node_modules:
            .bin: {}
            ansi-styles: {}
            chalk:
              source: {}
            color-convert: {}
            color-name: {}
            dayjs:
              esm:
                locale: {}
                plugin:
                  advancedFormat: {}
                  badMutable: {}
                  buddhistEra: {}
                  calendar: {}
                  customParseFormat: {}
                  dayOfYear: {}
                  duration: {}
                  isBetween: {}
                  isLeapYear: {}
                  isMoment: {}
                  isSameOrAfter: {}
                  isSameOrBefore: {}
                  isToday: {}
                  isTomorrow: {}
                  isYesterday: {}
                  isoWeek: {}
                  isoWeeksInYear: {}
                  localeData: {}
                  localizedFormat: {}
                  minMax: {}
                  objectSupport: {}
                  pluralGetSet: {}
                  quarterOfYear: {}
                  relativeTime: {}
                  timezone: {}
                  toArray: {}
                  toObject: {}
                  updateLocale: {}
                  utc: {}
                  weekOfYear: {}
                  weekYear: {}
                  weekday: {}
              locale: {}
              plugin: {}
            has-flag: {}
            lru-cache: {}
            semver:
              bin: {}
              classes: {}
              functions: {}
              internal: {}
              ranges: {}
            supports-color: {}
            ws:
              lib: {}
            yallist: {}
          src:
            push: {}
            reverse: {}
            transporters: {}
            utils:
              probes: {}
        io:
          .vscode: {}
          build:
            main:
              census:
                config: {}
                instrumentation: {}
                plugins: {}
              features: {}
              metrics: {}
              profilers: {}
              services: {}
              transports: {}
              utils:
                metrics: {}
          docs: {}
          node_modules:
            .bin: {}
            async:
              dist: {}
              internal: {}
            eventemitter2:
              lib: {}
            lru-cache: {}
            semver:
              bin: {}
              classes: {}
              functions: {}
              internal: {}
              ranges: {}
            tslib:
              docs: {}
            yallist: {}
          pres: {}
        js-api:
          dist: {}
          node_modules:
            async:
              dist: {}
              internal: {}
            eventemitter2:
              lib: {}
          src:
            auth_strategies: {}
            utils: {}
        pm2-version-check: {}
      '@pmmmwh':
        react-refresh-webpack-plugin:
          client:
            utils: {}
          lib:
            runtime: {}
            utils: {}
          loader:
            utils: {}
          options: {}
          overlay:
            components: {}
            containers: {}
          sockets:
            utils: {}
          types:
            lib: {}
            loader: {}
            options: {}
      '@popperjs':
        core:
          dist:
            cjs: {}
            esm:
              dom-utils: {}
              modifiers: {}
              utils: {}
            umd: {}
          lib:
            dom-utils: {}
            modifiers: {}
            utils: {}
      '@react-aria':
        ssr:
          dist: {}
          src: {}
      '@remix-run':
        router:
          dist: {}
      '@restart':
        hooks:
          cjs: {}
          esm: {}
          useAnimationFrame: {}
          useBreakpoint: {}
          useCallbackRef: {}
          useCommittedRef: {}
          useCustomEffect: {}
          useDebouncedCallback: {}
          useDebouncedState: {}
          useDebouncedValue: {}
          useEventCallback: {}
          useEventListener: {}
          useFocusManager: {}
          useForceUpdate: {}
          useGlobalListener: {}
          useImage: {}
          useImmediateUpdateEffect: {}
          useIntersectionObserver: {}
          useInterval: {}
          useIsInitialRenderRef: {}
          useIsomorphicEffect: {}
          useMap: {}
          useMediaQuery: {}
          useMergeState: {}
          useMergeStateFromProps: {}
          useMergedRefs: {}
          useMountEffect: {}
          useMounted: {}
          useMutationObserver: {}
          usePrevious: {}
          useRafInterval: {}
          useRefWithInitialValueFactory: {}
          useResizeObserver: {}
          useSafeState: {}
          useSet: {}
          useStableMemo: {}
          useStateAsync: {}
          useThrottledEventHandler: {}
          useTimeout: {}
          useToggleState: {}
          useUpdateEffect: {}
          useUpdateImmediateEffect: {}
          useUpdateLayoutEffect: {}
          useUpdatedRef: {}
          useWillUnmount: {}
        ui:
          Anchor: {}
          Button: {}
          DataKey: {}
          Dropdown: {}
          DropdownContext: {}
          DropdownItem: {}
          DropdownMenu: {}
          DropdownToggle: {}
          ImperativeTransition: {}
          Modal: {}
          ModalManager: {}
          Nav: {}
          NavContext: {}
          NavItem: {}
          NoopTransition: {}
          Overlay: {}
          Portal: {}
          RTGTransition: {}
          SelectableContext: {}
          TabContext: {}
          TabPanel: {}
          Tabs: {}
          Waypoint: {}
          cjs: {}
          esm: {}
          getScrollbarWidth: {}
          mergeOptionsWithPopperConfig: {}
          node_modules:
            uncontrollable:
              lib:
                cjs: {}
                esm: {}
              test: {}
          popper: {}
          ssr: {}
          types: {}
          useClickOutside: {}
          usePopper: {}
          useRTGTransitionProps: {}
          useRootClose: {}
          useScrollParent: {}
          useWaitForDOMRef: {}
          useWaypoint: {}
          useWindow: {}
          utils: {}
      '@rollup':
        plugin-babel:
          dist: {}
          types: {}
        plugin-node-resolve:
          dist:
            cjs: {}
            es: {}
          types: {}
        plugin-replace:
          dist: {}
          src: {}
          types: {}
        pluginutils:
          dist:
            cjs: {}
            es: {}
          node_modules:
            '@types':
              estree: {}
          types: {}
      '@rushstack':
        eslint-patch:
          lib:
            eslint-bulk-suppressions:
              cli:
                utils: {}
            exports: {}
      '@sinclair':
        typebox:
          compiler: {}
          conditional: {}
          errors: {}
          format: {}
          guard: {}
          value: {}
      '@sinonjs':
        commons:
          lib:
            prototypes: {}
          types:
            prototypes: {}
        fake-timers:
          src: {}
      '@socket.io':
        component-emitter:
          lib:
            cjs: {}
            esm: {}
      '@surma':
        rollup-plugin-off-main-thread:
          tests:
            fixtures:
              amd-function-name:
                build: {}
              assets-in-worker:
                build:
                  assets: {}
              dynamic-import:
                build: {}
              import-meta:
                build: {}
              import-meta-worker:
                build: {}
              import-worker-url:
                build: {}
              import-worker-url-custom-scheme:
                build: {}
              module-worker:
                build: {}
              more-workers:
                build: {}
              public-path:
                build: {}
              simple-bundle:
                build: {}
              single-default:
                build: {}
              url-import-meta-worker:
                build: {}
              worker:
                build: {}
      '@svgr':
        babel-plugin-add-jsx-attribute:
          lib: {}
        babel-plugin-remove-jsx-attribute:
          lib: {}
        babel-plugin-remove-jsx-empty-expression:
          lib: {}
        babel-plugin-replace-jsx-attribute-value:
          lib: {}
        babel-plugin-svg-dynamic-title:
          lib: {}
        babel-plugin-svg-em-dimensions:
          lib: {}
        babel-plugin-transform-react-native-svg:
          lib: {}
        babel-plugin-transform-svg-component:
          lib: {}
        babel-preset:
          lib: {}
        core:
          lib: {}
        hast-util-to-babel-ast:
          lib: {}
        plugin-jsx:
          lib: {}
        plugin-svgo:
          lib: {}
        webpack:
          lib: {}
      '@swc':
        helpers:
          _:
            _apply_decorated_descriptor: {}
            _apply_decs_2203_r: {}
            _array_like_to_array: {}
            _array_with_holes: {}
            _array_without_holes: {}
            _assert_this_initialized: {}
            _async_generator: {}
            _async_generator_delegate: {}
            _async_iterator: {}
            _async_to_generator: {}
            _await_async_generator: {}
            _await_value: {}
            _check_private_redeclaration: {}
            _class_apply_descriptor_destructure: {}
            _class_apply_descriptor_get: {}
            _class_apply_descriptor_set: {}
            _class_apply_descriptor_update: {}
            _class_call_check: {}
            _class_check_private_static_access: {}
            _class_check_private_static_field_descriptor: {}
            _class_extract_field_descriptor: {}
            _class_name_tdz_error: {}
            _class_private_field_destructure: {}
            _class_private_field_get: {}
            _class_private_field_init: {}
            _class_private_field_loose_base: {}
            _class_private_field_loose_key: {}
            _class_private_field_set: {}
            _class_private_field_update: {}
            _class_private_method_get: {}
            _class_private_method_init: {}
            _class_private_method_set: {}
            _class_static_private_field_destructure: {}
            _class_static_private_field_spec_get: {}
            _class_static_private_field_spec_set: {}
            _class_static_private_field_update: {}
            _class_static_private_method_get: {}
            _construct: {}
            _create_class: {}
            _create_for_of_iterator_helper_loose: {}
            _create_super: {}
            _decorate: {}
            _defaults: {}
            _define_enumerable_properties: {}
            _define_property: {}
            _dispose: {}
            _export_star: {}
            _extends: {}
            _get: {}
            _get_prototype_of: {}
            _identity: {}
            _inherits: {}
            _inherits_loose: {}
            _initializer_define_property: {}
            _initializer_warning_helper: {}
            _instanceof: {}
            _interop_require_default: {}
            _interop_require_wildcard: {}
            _is_native_function: {}
            _is_native_reflect_construct: {}
            _iterable_to_array: {}
            _iterable_to_array_limit: {}
            _iterable_to_array_limit_loose: {}
            _jsx: {}
            _new_arrow_check: {}
            _non_iterable_rest: {}
            _non_iterable_spread: {}
            _object_destructuring_empty: {}
            _object_spread: {}
            _object_spread_props: {}
            _object_without_properties: {}
            _object_without_properties_loose: {}
            _possible_constructor_return: {}
            _read_only_error: {}
            _set: {}
            _set_prototype_of: {}
            _skip_first_generator_next: {}
            _sliced_to_array: {}
            _sliced_to_array_loose: {}
            _super_prop_base: {}
            _tagged_template_literal: {}
            _tagged_template_literal_loose: {}
            _throw: {}
            _to_array: {}
            _to_consumable_array: {}
            _to_primitive: {}
            _to_property_key: {}
            _ts_decorate: {}
            _ts_generator: {}
            _ts_metadata: {}
            _ts_param: {}
            _ts_values: {}
            _type_of: {}
            _unsupported_iterable_to_array: {}
            _update: {}
            _using: {}
            _using_ctx: {}
            _wrap_async_generator: {}
            _wrap_native_super: {}
            _write_only_error: {}
            index: {}
          cjs: {}
          esm: {}
          scripts: {}
          src: {}
      '@testing-library':
        dom:
          dist:
            '@testing-library': {}
            queries: {}
          node_modules:
            ansi-styles: {}
            chalk:
              source: {}
            color-convert: {}
            color-name: {}
            has-flag: {}
            supports-color: {}
          types: {}
        jest-dom:
          dist: {}
          node_modules:
            ansi-styles: {}
            chalk:
              source: {}
            color-convert: {}
            color-name: {}
            has-flag: {}
            supports-color: {}
        react:
          dist:
            '@testing-library': {}
          node_modules:
            '@testing-library':
              dom:
                dist:
                  '@testing-library': {}
                  queries: {}
                types: {}
            ansi-styles: {}
            aria-query:
              lib:
                etc:
                  roles:
                    abstract: {}
                    dpub: {}
                    graphics: {}
                    literal: {}
                util: {}
            chalk:
              source: {}
            color-convert: {}
            color-name: {}
            has-flag: {}
            supports-color: {}
          types: {}
        user-event:
          dist:
            keyboard:
              plugins: {}
              shared: {}
            type: {}
            utils:
              click: {}
              edit: {}
              focus: {}
              misc: {}
      '@tootallnate':
        once:
          dist: {}
        quickjs-emscripten:
          c: {}
          dist:
            generated: {}
      '@trysound':
        sax:
          lib: {}
      '@types':
        aria-query: {}
        babel__core: {}
        babel__generator: {}
        babel__template: {}
        babel__traverse: {}
        body-parser: {}
        bonjour: {}
        connect: {}
        connect-history-api-fallback: {}
        debug: {}
        eslint:
          rules: {}
        eslint-scope: {}
        estree: {}
        estree-jsx: {}
        express: {}
        express-serve-static-core: {}
        graceful-fs: {}
        hast: {}
        html-minifier-terser: {}
        http-errors: {}
        http-proxy: {}
        istanbul-lib-coverage: {}
        istanbul-lib-report: {}
        istanbul-reports: {}
        jest:
          node_modules:
            '@jest':
              schemas:
                build: {}
              types:
                build: {}
            '@sinclair':
              typebox:
                compiler: {}
                errors: {}
                system: {}
                value: {}
            '@types':
              yargs: {}
            ansi-styles: {}
            chalk:
              source: {}
            color-convert: {}
            color-name: {}
            diff-sequences:
              build: {}
            expect:
              build: {}
            has-flag: {}
            jest-diff:
              build: {}
            jest-get-type:
              build: {}
            jest-matcher-utils:
              build: {}
            jest-message-util:
              build: {}
            jest-util:
              build: {}
            pretty-format:
              build:
                plugins:
                  lib: {}
              node_modules:
                ansi-styles: {}
            react-is:
              cjs: {}
              umd: {}
            supports-color: {}
        json-schema: {}
        json5: {}
        mdast: {}
        mime: {}
        ms: {}
        node:
          assert: {}
          dns: {}
          fs: {}
          readline: {}
          stream: {}
          timers: {}
        node-forge: {}
        parse-json: {}
        prettier: {}
        prop-types: {}
        q: {}
        qs: {}
        range-parser: {}
        react:
          ts5.0: {}
        react-dom:
          test-utils: {}
        react-transition-group: {}
        resolve: {}
        retry: {}
        semver:
          classes: {}
          functions: {}
          internals: {}
          ranges: {}
        send: {}
        serve-index: {}
        serve-static: {}
        sockjs: {}
        stack-utils: {}
        testing-library__jest-dom: {}
        trusted-types:
          lib: {}
        unist: {}
        warning: {}
        ws: {}
        yargs: {}
        yargs-parser: {}
      '@typescript-eslint':
        eslint-plugin:
          dist:
            configs: {}
            rules:
              enum-utils: {}
              naming-convention-utils: {}
            util: {}
          docs:
            rules: {}
        experimental-utils:
          _ts3.4:
            dist: {}
          dist: {}
        parser:
          _ts3.4:
            dist: {}
          dist: {}
        scope-manager:
          dist:
            definition: {}
            lib: {}
            referencer: {}
            scope: {}
            variable: {}
        type-utils:
          _ts3.4:
            dist: {}
          dist: {}
        types:
          _ts3.4:
            dist:
              generated: {}
          dist:
            generated: {}
        typescript-estree:
          _ts3.4:
            dist:
              create-program: {}
              jsx: {}
              parseSettings: {}
              ts-estree: {}
          dist:
            create-program: {}
            jsx: {}
            parseSettings: {}
            ts-estree: {}
        utils:
          _ts3.4:
            dist:
              ast-utils:
                eslint-utils: {}
              eslint-utils:
                rule-tester: {}
              ts-eslint: {}
              ts-eslint-scope: {}
          dist:
            ast-utils:
              eslint-utils: {}
            eslint-utils:
              rule-tester: {}
            ts-eslint: {}
            ts-eslint-scope: {}
          node_modules:
            eslint-scope:
              lib: {}
            estraverse: {}
        visitor-keys:
          _ts3.4:
            dist: {}
          dist: {}
      '@ungap':
        structured-clone:
          .github:
            workflows: {}
          cjs: {}
          esm: {}
      '@webassemblyjs':
        ast:
          esm:
            transform:
              ast-module-to-module-context: {}
              denormalize-type-references: {}
              wast-identifier-to-index: {}
            types: {}
          lib:
            transform:
              ast-module-to-module-context: {}
              denormalize-type-references: {}
              wast-identifier-to-index: {}
            types: {}
          scripts: {}
        floating-point-hex-parser:
          lib: {}
        helper-api-error:
          lib: {}
        helper-buffer:
          esm: {}
          lib: {}
        helper-numbers:
          lib: {}
          src: {}
        helper-wasm-bytecode:
          lib: {}
        helper-wasm-section:
          esm: {}
          lib: {}
        ieee754:
          lib: {}
          src: {}
        leb128:
          lib: {}
        utf8:
          lib: {}
          src: {}
          test: {}
        wasm-edit:
          esm: {}
          lib: {}
        wasm-gen:
          esm:
            encoder: {}
          lib:
            encoder: {}
        wasm-opt:
          esm: {}
          lib: {}
        wasm-parser:
          esm:
            types: {}
          lib:
            types: {}
        wast-printer:
          esm: {}
          lib: {}
      '@xtuc':
        ieee754:
          dist: {}
        long:
          dist: {}
          src: {}
      abab:
        lib: {}
      accepts: {}
      acorn:
        bin: {}
        dist: {}
      acorn-globals:
        node_modules:
          .bin: {}
          acorn:
            bin: {}
            dist: {}
      acorn-import-assertions:
        lib: {}
        src: {}
      acorn-jsx: {}
      acorn-walk:
        dist: {}
      address:
        lib: {}
      adjust-sourcemap-loader:
        codec:
          utility: {}
        lib:
          process: {}
      agent-base:
        dist:
          src: {}
        src: {}
      ajv:
        dist: {}
        lib:
          compile: {}
          dot: {}
          dotjs: {}
          refs: {}
        scripts: {}
      ajv-formats:
        dist: {}
        node_modules:
          ajv:
            dist:
              compile:
                codegen: {}
                jtd: {}
                validate: {}
              refs:
                json-schema-2019-09:
                  meta: {}
                json-schema-2020-12:
                  meta: {}
              runtime: {}
              standalone: {}
              types: {}
              vocabularies:
                applicator: {}
                core: {}
                discriminator: {}
                dynamic: {}
                format: {}
                jtd: {}
                unevaluated: {}
                validation: {}
            lib:
              compile:
                codegen: {}
                jtd: {}
                validate: {}
              refs:
                json-schema-2019-09:
                  meta: {}
                json-schema-2020-12:
                  meta: {}
              runtime: {}
              standalone: {}
              types: {}
              vocabularies:
                applicator: {}
                core: {}
                discriminator: {}
                dynamic: {}
                format: {}
                jtd: {}
                unevaluated: {}
                validation: {}
          json-schema-traverse:
            .github:
              workflows: {}
            spec:
              fixtures: {}
        src: {}
      ajv-keywords:
        keywords:
          dot: {}
          dotjs: {}
      amp:
        lib: {}
      amp-message: {}
      ansi-colors:
        types: {}
      ansi-escapes: {}
      ansi-html-community:
        bin: {}
      ansi-regex: {}
      ansi-styles: {}
      any-promise:
        register: {}
      anymatch: {}
      arg: {}
      argparse:
        lib:
          action:
            append: {}
            store: {}
          argument: {}
          help: {}
      aria-query:
        lib:
          etc:
            roles:
              abstract: {}
              dpub: {}
              graphics: {}
              literal: {}
          util: {}
      array-buffer-byte-length:
        .github: {}
        test: {}
      array-flatten: {}
      array-includes:
        .github: {}
        test: {}
      array-union: {}
      array.prototype.findlast:
        .github: {}
        test: {}
      array.prototype.findlastindex:
        .github: {}
        test: {}
      array.prototype.flat:
        .github: {}
        test: {}
      array.prototype.flatmap:
        .github: {}
        test: {}
      array.prototype.reduce:
        test: {}
      array.prototype.toreversed:
        .github: {}
        test: {}
      array.prototype.tosorted:
        .github: {}
        test: {}
      arraybuffer.prototype.slice:
        test: {}
      asap: {}
      ast-types:
        .github:
          workflows: {}
        def: {}
        gen: {}
        lib: {}
      ast-types-flow:
        lib: {}
      async:
        dist: {}
        internal: {}
      async-listener:
        node_modules:
          .bin: {}
          semver:
            bin: {}
        test:
          core: {}
      asynckit:
        lib: {}
      at-least-node: {}
      autoprefixer:
        bin: {}
        data: {}
        lib:
          hacks: {}
      available-typed-arrays:
        .github: {}
        test: {}
      axe-core:
        locales: {}
      axios:
        dist:
          browser: {}
          esm: {}
          node: {}
        lib:
          adapters: {}
          cancel: {}
          core: {}
          defaults: {}
          env:
            classes: {}
          helpers: {}
          platform:
            browser:
              classes: {}
            common: {}
            node:
              classes: {}
        node_modules:
          form-data:
            lib: {}
      axobject-query:
        lib:
          etc:
            objects: {}
          util: {}
      babel-jest:
        build: {}
        node_modules:
          ansi-styles: {}
          chalk:
            source: {}
          color-convert: {}
          color-name: {}
          has-flag: {}
          supports-color: {}
      babel-loader:
        lib: {}
        node_modules:
          schema-utils:
            declarations:
              keywords: {}
              util: {}
            dist:
              keywords: {}
              util: {}
      babel-plugin-istanbul:
        lib: {}
      babel-plugin-jest-hoist:
        build: {}
      babel-plugin-macros:
        dist: {}
      babel-plugin-named-asset-import: {}
      babel-plugin-polyfill-corejs2:
        esm: {}
        lib: {}
        node_modules:
          .bin: {}
          semver:
            bin: {}
      babel-plugin-polyfill-corejs3:
        core-js-compat: {}
        esm: {}
        lib: {}
      babel-plugin-polyfill-regenerator:
        esm: {}
        lib: {}
      babel-plugin-transform-react-remove-prop-types:
        lib: {}
        src: {}
      babel-preset-current-node-syntax:
        scripts: {}
        src: {}
      babel-preset-jest: {}
      babel-preset-react-app: {}
      bail: {}
      balanced-match:
        .github: {}
      basic-ftp:
        dist: {}
      batch: {}
      bfj:
        src: {}
        test:
          unit: {}
      big.js: {}
      binary-extensions: {}
      blessed:
        bin: {}
        browser: {}
        example:
          ansi-viewer: {}
        lib:
          widgets: {}
        usr:
          fonts: {}
        vendor: {}
      bluebird:
        js:
          browser: {}
          release: {}
      bodec: {}
      body-parser:
        lib:
          types: {}
        node_modules:
          bytes: {}
          debug:
            src: {}
          iconv-lite:
            encodings:
              tables: {}
            lib: {}
          ms: {}
      bonjour-service:
        dist:
          lib:
            utils: {}
        types: {}
      boolbase: {}
      bootstrap:
        dist:
          css: {}
          js: {}
        js:
          dist:
            dom: {}
            util: {}
          src:
            dom: {}
            util: {}
        scss:
          forms: {}
          helpers: {}
          mixins: {}
          utilities: {}
          vendor: {}
      brace-expansion: {}
      braces:
        lib: {}
      browser-process-hrtime: {}
      browserslist: {}
      bser: {}
      buffer-from: {}
      builtin-modules: {}
      bytes: {}
      call-bind:
        .github: {}
        test: {}
      callsites: {}
      camel-case:
        dist: {}
        dist.es2015: {}
      camelcase: {}
      camelcase-css: {}
      caniuse-api:
        dist: {}
      caniuse-lite:
        data:
          features: {}
          regions: {}
        dist:
          lib: {}
          unpacker: {}
      case-sensitive-paths-webpack-plugin: {}
      ccount: {}
      chalk:
        types: {}
      char-regex: {}
      character-entities: {}
      character-entities-html4: {}
      character-entities-legacy: {}
      character-reference-invalid: {}
      charm:
        example: {}
        lib: {}
      check-types:
        src: {}
      chokidar:
        lib: {}
        node_modules:
          glob-parent: {}
        types: {}
      chrome-trace-event:
        dist: {}
      ci-info: {}
      cjs-module-lexer:
        dist: {}
      classnames: {}
      clean-css:
        lib:
          optimizer:
            configuration:
              properties: {}
            level-0: {}
            level-1:
              property-optimizers: {}
              value-optimizers:
                color: {}
            level-2:
              properties: {}
          options: {}
          reader: {}
          tokenizer: {}
          utils: {}
          writer: {}
        node_modules:
          source-map:
            dist: {}
            lib: {}
      cli-tableau:
        lib: {}
        node_modules:
          ansi-styles: {}
          chalk:
            source: {}
          color-convert: {}
          color-name: {}
          has-flag: {}
          supports-color: {}
      cliui:
        build:
          lib: {}
      co: {}
      coa:
        lib: {}
      collect-v8-coverage: {}
      color-convert: {}
      color-name: {}
      colord:
        plugins: {}
      colorette: {}
      combined-stream:
        lib: {}
      comma-separated-tokens: {}
      commander:
        lib: {}
        typings: {}
      common-path-prefix: {}
      common-tags:
        dist: {}
        es:
          TemplateTag: {}
          codeBlock: {}
          commaLists: {}
          commaListsAnd: {}
          commaListsOr: {}
          html: {}
          inlineArrayTransformer: {}
          inlineLists: {}
          oneLine: {}
          oneLineCommaLists: {}
          oneLineCommaListsAnd: {}
          oneLineCommaListsOr: {}
          oneLineInlineLists: {}
          oneLineTrim: {}
          removeNonPrintingValuesTransformer: {}
          replaceResultTransformer: {}
          replaceStringTransformer: {}
          replaceSubstitutionTransformer: {}
          safeHtml: {}
          source: {}
          splitStringTransformer: {}
          stripIndent: {}
          stripIndentTransformer: {}
          stripIndents: {}
          trimResultTransformer: {}
          utils:
            readFromFixture: {}
        lib:
          TemplateTag: {}
          codeBlock: {}
          commaLists: {}
          commaListsAnd: {}
          commaListsOr: {}
          html: {}
          inlineArrayTransformer: {}
          inlineLists: {}
          oneLine: {}
          oneLineCommaLists: {}
          oneLineCommaListsAnd: {}
          oneLineCommaListsOr: {}
          oneLineInlineLists: {}
          oneLineTrim: {}
          removeNonPrintingValuesTransformer: {}
          replaceResultTransformer: {}
          replaceStringTransformer: {}
          replaceSubstitutionTransformer: {}
          safeHtml: {}
          source: {}
          splitStringTransformer: {}
          stripIndent: {}
          stripIndentTransformer: {}
          stripIndents: {}
          trimResultTransformer: {}
          utils:
            readFromFixture: {}
      commondir:
        example: {}
        test: {}
      compressible: {}
      compression:
        node_modules:
          debug:
            src: {}
          ms: {}
          safe-buffer: {}
      concat-map:
        example: {}
        test: {}
      confusing-browser-globals: {}
      connect-history-api-fallback:
        lib: {}
      content-disposition: {}
      content-type: {}
      continuation-local-storage:
        test: {}
      convert-source-map: {}
      cookie: {}
      cookie-signature: {}
      core-js:
        actual:
          array:
            virtual: {}
          array-buffer: {}
          async-disposable-stack: {}
          async-iterator: {}
          data-view: {}
          date: {}
          disposable-stack: {}
          dom-collections: {}
          dom-exception: {}
          error: {}
          function:
            virtual: {}
          instance: {}
          iterator: {}
          json: {}
          map: {}
          math: {}
          number:
            virtual: {}
          object: {}
          promise: {}
          reflect: {}
          regexp: {}
          set: {}
          string:
            virtual: {}
          symbol: {}
          typed-array: {}
          url: {}
          url-search-params: {}
          weak-map: {}
          weak-set: {}
        es:
          array:
            virtual: {}
          array-buffer: {}
          data-view: {}
          date: {}
          error: {}
          function:
            virtual: {}
          instance: {}
          json: {}
          map: {}
          math: {}
          number:
            virtual: {}
          object: {}
          promise: {}
          reflect: {}
          regexp: {}
          set: {}
          string:
            virtual: {}
          symbol: {}
          typed-array: {}
          weak-map: {}
          weak-set: {}
        features:
          array:
            virtual: {}
          array-buffer: {}
          async-disposable-stack: {}
          async-iterator: {}
          bigint: {}
          data-view: {}
          date: {}
          disposable-stack: {}
          dom-collections: {}
          dom-exception: {}
          error: {}
          function:
            virtual: {}
          instance: {}
          iterator: {}
          json: {}
          map: {}
          math: {}
          number:
            virtual: {}
          object: {}
          observable: {}
          promise: {}
          reflect: {}
          regexp: {}
          set: {}
          string:
            virtual: {}
          symbol: {}
          typed-array: {}
          url: {}
          url-search-params: {}
          weak-map: {}
          weak-set: {}
        full:
          array:
            virtual: {}
          array-buffer: {}
          async-disposable-stack: {}
          async-iterator: {}
          bigint: {}
          data-view: {}
          date: {}
          disposable-stack: {}
          dom-collections: {}
          dom-exception: {}
          error: {}
          function:
            virtual: {}
          instance: {}
          iterator: {}
          json: {}
          map: {}
          math: {}
          number:
            virtual: {}
          object: {}
          observable: {}
          promise: {}
          reflect: {}
          regexp: {}
          set: {}
          string:
            virtual: {}
          symbol: {}
          typed-array: {}
          url: {}
          url-search-params: {}
          weak-map: {}
          weak-set: {}
        internals: {}
        modules: {}
        proposals: {}
        stable:
          array:
            virtual: {}
          array-buffer: {}
          data-view: {}
          date: {}
          dom-collections: {}
          dom-exception: {}
          error: {}
          function:
            virtual: {}
          instance: {}
          json: {}
          map: {}
          math: {}
          number:
            virtual: {}
          object: {}
          promise: {}
          reflect: {}
          regexp: {}
          set: {}
          string:
            virtual: {}
          symbol: {}
          typed-array: {}
          url: {}
          url-search-params: {}
          weak-map: {}
          weak-set: {}
        stage: {}
        web: {}
      core-js-compat: {}
      core-js-pure:
        actual:
          array:
            virtual: {}
          array-buffer: {}
          async-disposable-stack: {}
          async-iterator: {}
          data-view: {}
          date: {}
          disposable-stack: {}
          dom-collections: {}
          dom-exception: {}
          error: {}
          function:
            virtual: {}
          instance: {}
          iterator: {}
          json: {}
          map: {}
          math: {}
          number:
            virtual: {}
          object: {}
          promise: {}
          reflect: {}
          regexp: {}
          set: {}
          string:
            virtual: {}
          symbol: {}
          typed-array: {}
          url: {}
          url-search-params: {}
          weak-map: {}
          weak-set: {}
        es:
          array:
            virtual: {}
          array-buffer: {}
          data-view: {}
          date: {}
          error: {}
          function:
            virtual: {}
          instance: {}
          json: {}
          map: {}
          math: {}
          number:
            virtual: {}
          object: {}
          promise: {}
          reflect: {}
          regexp: {}
          set: {}
          string:
            virtual: {}
          symbol: {}
          typed-array: {}
          weak-map: {}
          weak-set: {}
        features:
          array:
            virtual: {}
          array-buffer: {}
          async-disposable-stack: {}
          async-iterator: {}
          bigint: {}
          data-view: {}
          date: {}
          disposable-stack: {}
          dom-collections: {}
          dom-exception: {}
          error: {}
          function:
            virtual: {}
          instance: {}
          iterator: {}
          json: {}
          map: {}
          math: {}
          number:
            virtual: {}
          object: {}
          observable: {}
          promise: {}
          reflect: {}
          regexp: {}
          set: {}
          string:
            virtual: {}
          symbol: {}
          typed-array: {}
          url: {}
          url-search-params: {}
          weak-map: {}
          weak-set: {}
        full:
          array:
            virtual: {}
          array-buffer: {}
          async-disposable-stack: {}
          async-iterator: {}
          bigint: {}
          data-view: {}
          date: {}
          disposable-stack: {}
          dom-collections: {}
          dom-exception: {}
          error: {}
          function:
            virtual: {}
          instance: {}
          iterator: {}
          json: {}
          map: {}
          math: {}
          number:
            virtual: {}
          object: {}
          observable: {}
          promise: {}
          reflect: {}
          regexp: {}
          set: {}
          string:
            virtual: {}
          symbol: {}
          typed-array: {}
          url: {}
          url-search-params: {}
          weak-map: {}
          weak-set: {}
        internals: {}
        modules: {}
        proposals: {}
        stable:
          array:
            virtual: {}
          array-buffer: {}
          data-view: {}
          date: {}
          dom-collections: {}
          dom-exception: {}
          error: {}
          function:
            virtual: {}
          instance: {}
          json: {}
          map: {}
          math: {}
          number:
            virtual: {}
          object: {}
          promise: {}
          reflect: {}
          regexp: {}
          set: {}
          string:
            virtual: {}
          symbol: {}
          typed-array: {}
          url: {}
          url-search-params: {}
          weak-map: {}
          weak-set: {}
        stage: {}
        web: {}
      core-util-is:
        lib: {}
      cosmiconfig:
        dist: {}
      croner:
        dist: {}
        src: {}
        types: {}
      cross-spawn:
        lib:
          util: {}
      crypto-random-string: {}
      css-blank-pseudo:
        dist: {}
      css-declaration-sorter:
        dist: {}
        orders: {}
        src: {}
      css-has-pseudo:
        dist: {}
      css-loader:
        dist:
          plugins: {}
          runtime: {}
      css-minimizer-webpack-plugin:
        dist: {}
        node_modules:
          ajv:
            dist:
              compile:
                codegen: {}
                jtd: {}
                validate: {}
              refs:
                json-schema-2019-09:
                  meta: {}
                json-schema-2020-12:
                  meta: {}
              runtime: {}
              standalone: {}
              types: {}
              vocabularies:
                applicator: {}
                core: {}
                discriminator: {}
                dynamic: {}
                format: {}
                jtd: {}
                unevaluated: {}
                validation: {}
            lib:
              compile:
                codegen: {}
                jtd: {}
                validate: {}
              refs:
                json-schema-2019-09:
                  meta: {}
                json-schema-2020-12:
                  meta: {}
              runtime: {}
              standalone: {}
              types: {}
              vocabularies:
                applicator: {}
                core: {}
                discriminator: {}
                dynamic: {}
                format: {}
                jtd: {}
                unevaluated: {}
                validation: {}
          ajv-keywords:
            dist:
              definitions: {}
              keywords: {}
            src:
              definitions: {}
              keywords: {}
          json-schema-traverse:
            .github:
              workflows: {}
            spec:
              fixtures: {}
          schema-utils:
            declarations:
              keywords: {}
              util: {}
            dist:
              keywords: {}
              util: {}
          source-map:
            dist: {}
            lib: {}
        types: {}
      css-prefers-color-scheme:
        dist: {}
      css-select:
        lib:
          pseudo-selectors: {}
      css-select-base-adapter:
        test: {}
      css-tree:
        data: {}
        dist: {}
        lib:
          common: {}
          convertor: {}
          definition-syntax: {}
          generator: {}
          lexer: {}
          parser: {}
          syntax:
            atrule: {}
            config: {}
            function: {}
            node: {}
            pseudo:
              common: {}
            scope: {}
          tokenizer: {}
          utils: {}
          walker: {}
        node_modules:
          source-map:
            dist: {}
            lib: {}
      css-what:
        lib:
          commonjs: {}
          es: {}
      css.escape: {}
      cssdb: {}
      cssesc:
        bin: {}
        man: {}
      cssnano:
        src:
          postcss-discard-comments: {}
          postcss-discard-empty: {}
          postcss-normalize-whitespace: {}
        types: {}
      cssnano-preset-default:
        src: {}
        types: {}
      cssnano-utils:
        src: {}
        types: {}
      csso:
        dist: {}
        lib:
          clean: {}
          replace:
            atrule: {}
            property: {}
          restructure:
            prepare: {}
        node_modules:
          css-tree:
            data: {}
            dist: {}
            lib:
              common: {}
              convertor: {}
              definition-syntax: {}
              generator: {}
              lexer: {}
              parser: {}
              syntax:
                atrule: {}
                config: {}
                function: {}
                node: {}
                pseudo:
                  common: {}
                scope: {}
              tokenizer: {}
              utils: {}
              walker: {}
          mdn-data:
            api: {}
            css: {}
            l10n: {}
          source-map:
            dist: {}
            lib: {}
      cssom:
        lib: {}
      cssstyle:
        lib:
          properties: {}
          utils: {}
        node_modules:
          cssom:
            lib: {}
      csstype: {}
      culvert: {}
      damerau-levenshtein:
        scripts: {}
        test: {}
      data-uri-to-buffer:
        dist: {}
      data-urls:
        lib: {}
      data-view-buffer:
        .github: {}
        test: {}
      data-view-byte-length:
        .github: {}
        test: {}
      data-view-byte-offset:
        .github: {}
        test: {}
      dayjs:
        esm:
          locale: {}
          plugin:
            advancedFormat: {}
            arraySupport: {}
            badMutable: {}
            bigIntSupport: {}
            buddhistEra: {}
            calendar: {}
            customParseFormat: {}
            dayOfYear: {}
            devHelper: {}
            duration: {}
            isBetween: {}
            isLeapYear: {}
            isMoment: {}
            isSameOrAfter: {}
            isSameOrBefore: {}
            isToday: {}
            isTomorrow: {}
            isYesterday: {}
            isoWeek: {}
            isoWeeksInYear: {}
            localeData: {}
            localizedFormat: {}
            minMax: {}
            objectSupport: {}
            pluralGetSet: {}
            preParsePostFormat: {}
            quarterOfYear: {}
            relativeTime: {}
            timezone: {}
            toArray: {}
            toObject: {}
            updateLocale: {}
            utc: {}
            weekOfYear: {}
            weekYear: {}
            weekday: {}
        locale: {}
        plugin: {}
      debug:
        src: {}
      decimal.js: {}
      decode-named-character-reference: {}
      dedent:
        dist: {}
      deep-equal:
        example: {}
        test: {}
      deep-is:
        example: {}
        test: {}
      deepmerge:
        dist: {}
      default-gateway: {}
      define-data-property:
        .github: {}
        test: {}
      define-lazy-prop: {}
      define-properties:
        .github: {}
      degenerator:
        dist: {}
      delayed-stream:
        lib: {}
      depd:
        lib:
          browser: {}
      dequal:
        dist: {}
        lite: {}
      destroy: {}
      detect-newline: {}
      detect-node: {}
      detect-port-alt:
        .vscode: {}
        bin: {}
        lib: {}
        node_modules:
          debug:
            src: {}
          ms: {}
      devlop:
        lib: {}
      didyoumean: {}
      diff-sequences:
        build: {}
        perf: {}
      dir-glob: {}
      dlv:
        dist: {}
      dns-packet: {}
      doctrine:
        lib: {}
      dom-accessibility-api:
        dist:
          polyfills: {}
      dom-converter:
        lib: {}
      dom-helpers:
        activeElement: {}
        addClass: {}
        addEventListener: {}
        animate: {}
        animationFrame: {}
        attribute: {}
        camelize: {}
        camelizeStyle: {}
        canUseDOM: {}
        childElements: {}
        childNodes: {}
        cjs: {}
        clear: {}
        closest: {}
        collectElements: {}
        collectSiblings: {}
        contains: {}
        css: {}
        esm: {}
        filterEventHandler: {}
        getComputedStyle: {}
        getScrollAccessor: {}
        hasClass: {}
        height: {}
        hyphenate: {}
        hyphenateStyle: {}
        insertAfter: {}
        isDocument: {}
        isInput: {}
        isTransform: {}
        isVisible: {}
        isWindow: {}
        listen: {}
        matches: {}
        nextUntil: {}
        offset: {}
        offsetParent: {}
        ownerDocument: {}
        ownerWindow: {}
        parents: {}
        position: {}
        prepend: {}
        querySelectorAll: {}
        remove: {}
        removeClass: {}
        removeEventListener: {}
        scrollLeft: {}
        scrollParent: {}
        scrollTo: {}
        scrollTop: {}
        scrollbarSize: {}
        siblings: {}
        text: {}
        toggleClass: {}
        transitionEnd: {}
        triggerEvent: {}
        width: {}
      dom-serializer:
        lib:
          esm: {}
      domelementtype:
        lib:
          esm: {}
      domexception:
        lib: {}
        node_modules:
          webidl-conversions:
            lib: {}
      domhandler:
        lib: {}
      domutils:
        lib: {}
      dot-case:
        dist: {}
        dist.es2015: {}
      dotenv:
        lib: {}
        types: {}
      dotenv-expand:
        lib: {}
      duplexer:
        test: {}
      eastasianwidth: {}
      ee-first: {}
      ejs:
        bin: {}
        lib: {}
      electron-to-chromium: {}
      emitter-listener:
        test: {}
      emittery: {}
      emoji-regex:
        es2015: {}
      emojis-list: {}
      encodeurl: {}
      engine.io-client:
        build:
          cjs:
            contrib: {}
            transports: {}
          esm:
            contrib: {}
            transports: {}
          esm-debug:
            contrib: {}
            transports: {}
        dist: {}
        node_modules:
          ws:
            lib: {}
      engine.io-parser:
        build:
          cjs:
            contrib: {}
          esm:
            contrib: {}
      enhanced-resolve:
        lib:
          util: {}
      enquirer:
        lib:
          prompts: {}
          types: {}
      entities:
        lib:
          maps: {}
      error-ex: {}
      error-stack-parser:
        dist: {}
      es-abstract:
        '2015':
          tables: {}
        '2016':
          tables: {}
        '2017':
          tables: {}
        '2018':
          tables: {}
        '2019':
          tables: {}
        '2020':
          BigInt: {}
          Number: {}
          tables: {}
        '2021':
          BigInt: {}
          Number: {}
          tables: {}
        '2022':
          BigInt: {}
          Number: {}
          tables: {}
        '2023':
          BigInt: {}
          Number: {}
          tables: {}
        '2024':
          BigInt: {}
          Number: {}
          tables: {}
        '5': {}
        helpers:
          records: {}
        operations: {}
      es-array-method-boxes-properly:
        .github: {}
        test: {}
      es-define-property:
        .github: {}
        test: {}
      es-errors:
        .github: {}
        test: {}
      es-get-iterator:
        .github: {}
        test: {}
      es-iterator-helpers:
        .github: {}
        Iterator: {}
        Iterator.from: {}
        Iterator.prototype: {}
        Iterator.prototype.constructor: {}
        Iterator.prototype.drop: {}
        Iterator.prototype.every: {}
        Iterator.prototype.filter: {}
        Iterator.prototype.find: {}
        Iterator.prototype.flatMap: {}
        Iterator.prototype.forEach: {}
        Iterator.prototype.map: {}
        Iterator.prototype.reduce: {}
        Iterator.prototype.some: {}
        Iterator.prototype.take: {}
        Iterator.prototype.toArray: {}
        IteratorHelperPrototype: {}
        WrapForValidIteratorPrototype: {}
        aos: {}
        test:
          helpers: {}
      es-module-lexer:
        dist: {}
        types: {}
      es-object-atoms:
        .github: {}
        test: {}
      es-set-tostringtag:
        test: {}
      es-shim-unscopables:
        .github: {}
        test: {}
      es-to-primitive:
        .github: {}
        helpers: {}
        test: {}
      escalade:
        dist: {}
        sync: {}
      escape-html: {}
      escape-string-regexp: {}
      escodegen:
        bin: {}
        node_modules:
          source-map:
            dist: {}
            lib: {}
      eslint:
        bin: {}
        conf: {}
        lib:
          cli-engine:
            formatters: {}
          config: {}
          eslint: {}
          linter:
            code-path-analysis: {}
          rule-tester: {}
          rules:
            utils:
              patterns: {}
              unicode: {}
          shared: {}
          source-code:
            token-store: {}
        messages: {}
        node_modules:
          .bin: {}
          ansi-styles: {}
          argparse:
            lib: {}
          chalk:
            source: {}
          color-convert: {}
          color-name: {}
          escape-string-regexp: {}
          globals: {}
          has-flag: {}
          js-yaml:
            bin: {}
            dist: {}
            lib:
              schema: {}
              type: {}
          supports-color: {}
          type-fest:
            source: {}
            ts41: {}
      eslint-config-react-app: {}
      eslint-import-resolver-node:
        node_modules:
          debug:
            src: {}
      eslint-module-utils:
        node_modules:
          debug:
            src: {}
      eslint-plugin-flowtype:
        dist:
          bin: {}
          configs: {}
          rules:
            arrayStyle: {}
            typeColonSpacing: {}
          utilities: {}
      eslint-plugin-import:
        config: {}
        docs:
          rules: {}
        lib:
          core: {}
          rules: {}
        memo-parser: {}
        node_modules:
          .bin: {}
          debug:
            src: {}
          doctrine:
            lib: {}
          semver:
            bin: {}
      eslint-plugin-jest:
        docs:
          rules: {}
        lib:
          processors: {}
          rules: {}
      eslint-plugin-jsx-a11y:
        __mocks__: {}
        __tests__:
          __util__:
            helpers: {}
          src:
            rules: {}
            util:
              implicitRoles: {}
        docs:
          rules: {}
        lib:
          rules: {}
          util:
            implicitRoles: {}
      eslint-plugin-react:
        configs: {}
        lib:
          rules: {}
          util: {}
        node_modules:
          .bin: {}
          doctrine:
            lib: {}
          resolve:
            .github: {}
            bin: {}
            example: {}
            lib: {}
            test:
              dotdot:
                abc: {}
              module_dir:
                xmodules:
                  aaa: {}
                ymodules:
                  aaa: {}
                zmodules:
                  bbb: {}
              node_path:
                x:
                  aaa: {}
                  ccc: {}
                y:
                  bbb: {}
                  ccc: {}
              pathfilter:
                deep_ref: {}
              precedence:
                aaa: {}
                bbb: {}
              resolver:
                baz: {}
                browser_field: {}
                dot_main: {}
                dot_slash_main: {}
                empty_main: {}
                false_main: {}
                incorrect_main: {}
                invalid_main: {}
                missing_index: {}
                missing_main: {}
                multirepo:
                  packages:
                    package-a: {}
                    package-b: {}
                nested_symlinks:
                  mylib: {}
                null_main: {}
                other_path:
                  lib: {}
                quux:
                  foo: {}
                same_names:
                  foo: {}
                symlinked:
                  _:
                    node_modules: {}
                    symlink_target: {}
                  package: {}
                without_basedir: {}
              shadowed_core:
                node_modules:
                  util: {}
          semver:
            bin: {}
      eslint-plugin-react-hooks:
        cjs: {}
      eslint-plugin-testing-library:
        configs: {}
        create-testing-library-rule: {}
        node-utils: {}
        rules: {}
        utils: {}
      eslint-scope:
        dist: {}
        lib: {}
      eslint-visitor-keys:
        dist: {}
        lib: {}
      eslint-webpack-plugin:
        dist: {}
        node_modules:
          ajv:
            dist:
              compile:
                codegen: {}
                jtd: {}
                validate: {}
              refs:
                json-schema-2019-09:
                  meta: {}
                json-schema-2020-12:
                  meta: {}
              runtime: {}
              standalone: {}
              types: {}
              vocabularies:
                applicator: {}
                core: {}
                discriminator: {}
                dynamic: {}
                format: {}
                jtd: {}
                unevaluated: {}
                validation: {}
            lib:
              compile:
                codegen: {}
                jtd: {}
                validate: {}
              refs:
                json-schema-2019-09:
                  meta: {}
                json-schema-2020-12:
                  meta: {}
              runtime: {}
              standalone: {}
              types: {}
              vocabularies:
                applicator: {}
                core: {}
                discriminator: {}
                dynamic: {}
                format: {}
                jtd: {}
                unevaluated: {}
                validation: {}
          ajv-keywords:
            dist:
              definitions: {}
              keywords: {}
            src:
              definitions: {}
              keywords: {}
          has-flag: {}
          jest-worker:
            build:
              base: {}
              workers: {}
          json-schema-traverse:
            .github:
              workflows: {}
            spec:
              fixtures: {}
          schema-utils:
            declarations:
              keywords: {}
              util: {}
            dist:
              keywords: {}
              util: {}
          supports-color: {}
        types: {}
      espree:
        dist: {}
        lib: {}
      esprima:
        bin: {}
        dist: {}
      esquery:
        dist: {}
      esrecurse: {}
      estraverse: {}
      estree-util-is-identifier-name:
        lib: {}
      estree-walker:
        dist: {}
        src: {}
        types: {}
      esutils:
        lib: {}
      etag: {}
      eventemitter2:
        lib: {}
      eventemitter3:
        umd: {}
      events:
        .github: {}
        tests: {}
      execa:
        lib: {}
      exit:
        lib: {}
        test:
          fixtures: {}
      expect:
        build: {}
      express:
        lib:
          middleware: {}
          router: {}
        node_modules:
          debug:
            src: {}
          ms: {}
      extend: {}
      extrareqp2:
        dist: {}
        lib:
          adapters: {}
          cancel: {}
          core: {}
          helpers: {}
      fast-deep-equal:
        es6: {}
      fast-glob:
        node_modules:
          glob-parent: {}
        out:
          managers: {}
          providers:
            filters: {}
            matchers: {}
            transformers: {}
          readers: {}
          types: {}
          utils: {}
      fast-json-patch:
        commonjs: {}
        dist: {}
        module: {}
      fast-json-stable-stringify:
        .github: {}
        benchmark: {}
        example: {}
        test: {}
      fast-levenshtein: {}
      fastq:
        .github:
          workflows: {}
        test: {}
      fault: {}
      faye-websocket:
        lib:
          faye:
            websocket:
              api: {}
      fb-watchman: {}
      fclone:
        bench: {}
        dist: {}
        src: {}
      file-entry-cache: {}
      file-loader:
        dist: {}
      filelist:
        node_modules:
          brace-expansion:
            .github: {}
          minimatch:
            lib: {}
      filesize:
        lib: {}
      fill-range: {}
      finalhandler:
        node_modules:
          debug:
            src: {}
          ms: {}
      find-cache-dir: {}
      find-up: {}
      flat-cache:
        src: {}
      flatted:
        cjs: {}
        esm: {}
        php: {}
        python:
          __pycache__: {}
        types: {}
      follow-redirects: {}
      for-each:
        test: {}
      foreground-child:
        dist:
          cjs: {}
          mjs: {}
        node_modules:
          signal-exit:
            dist:
              cjs: {}
              mjs: {}
      fork-ts-checker-webpack-plugin:
        lib:
          error: {}
          eslint-reporter:
            issue: {}
            reporter: {}
            types: {}
          formatter:
            types: {}
          hooks: {}
          issue: {}
          logger: {}
          profile: {}
          reporter:
            reporter-rpc: {}
          rpc:
            error: {}
            rpc-ipc:
              error: {}
          typescript-reporter:
            extension:
              vue:
                types: {}
            file-system: {}
            issue: {}
            profile: {}
            reporter: {}
          utils:
            array: {}
            async: {}
            path: {}
          watch: {}
        node_modules:
          ansi-styles: {}
          chalk:
            source: {}
          color-convert: {}
          color-name: {}
          cosmiconfig:
            dist: {}
          fs-extra:
            lib:
              copy: {}
              copy-sync: {}
              empty: {}
              ensure: {}
              fs: {}
              json: {}
              mkdirs: {}
              move: {}
              move-sync: {}
              output: {}
              path-exists: {}
              remove: {}
              util: {}
          has-flag: {}
          schema-utils:
            declarations:
              keywords: {}
              util: {}
            dist:
              keywords: {}
              util: {}
          supports-color: {}
          tapable:
            lib: {}
      form-data:
        lib: {}
      format: {}
      forwarded: {}
      fraction.js: {}
      fresh: {}
      fs-extra:
        lib:
          copy: {}
          empty: {}
          ensure: {}
          fs: {}
          json: {}
          mkdirs: {}
          move: {}
          output-file: {}
          path-exists: {}
          remove: {}
          util: {}
      fs-monkey:
        docs:
          api: {}
        lib:
          util: {}
      fs.realpath: {}
      fsevents: {}
      function-bind:
        .github: {}
        test: {}
      function.prototype.name:
        .github: {}
        helpers: {}
        test: {}
      functions-have-names:
        .github: {}
        test: {}
      gensync:
        test: {}
      get-caller-file: {}
      get-intrinsic:
        .github: {}
        test: {}
      get-own-enumerable-property-symbols:
        lib: {}
      get-package-type: {}
      get-stream: {}
      get-symbol-description:
        .github: {}
        test: {}
      get-uri:
        dist: {}
        node_modules:
          fs-extra:
            lib:
              copy: {}
              empty: {}
              ensure: {}
              fs: {}
              json: {}
              mkdirs: {}
              move: {}
              output-file: {}
              path-exists: {}
              remove: {}
              util: {}
      git-node-fs:
        lib: {}
        mixins: {}
        test:
          fixtures: {}
      git-sha1: {}
      glob: {}
      glob-parent: {}
      glob-to-regexp: {}
      global-modules: {}
      global-prefix:
        node_modules:
          .bin: {}
          which:
            bin: {}
      globals: {}
      globalthis:
        test: {}
      globby: {}
      gopd:
        .github: {}
        test: {}
      graceful-fs: {}
      graphemer:
        lib: {}
      gzip-size: {}
      handle-thing:
        lib: {}
        test: {}
      harmony-reflect: {}
      has-bigints:
        .github: {}
        test: {}
      has-flag: {}
      has-property-descriptors:
        .github: {}
        test: {}
      has-proto:
        .github: {}
        test: {}
      has-symbols:
        .github: {}
        test:
          shams: {}
      has-tostringtag:
        .github: {}
        test:
          shams: {}
      hasown:
        .github: {}
      hast-util-parse-selector: {}
      hast-util-to-jsx-runtime:
        lib: {}
      hast-util-whitespace:
        lib: {}
      hastscript:
        node_modules:
          '@types':
            hast: {}
            unist: {}
          comma-separated-tokens: {}
          property-information:
            lib:
              util: {}
          space-separated-tokens: {}
      he:
        bin: {}
        man: {}
      highlight.js:
        lib:
          languages: {}
        scss: {}
        styles: {}
        types: {}
      hoopy: {}
      hpack.js:
        bin: {}
        lib:
          hpack: {}
        node_modules:
          isarray: {}
          readable-stream:
            doc:
              wg-meetings: {}
            lib:
              internal:
                streams: {}
          safe-buffer: {}
          string_decoder:
            lib: {}
        test: {}
        tools: {}
      html-encoding-sniffer:
        lib: {}
      html-entities:
        lib: {}
        src: {}
      html-escaper:
        cjs: {}
        esm: {}
        test: {}
      html-minifier-terser:
        src: {}
      html-url-attributes:
        lib: {}
      html-webpack-plugin:
        lib: {}
      htmlparser2:
        lib: {}
      http-deceiver:
        lib: {}
        test: {}
      http-errors: {}
      http-parser-js: {}
      http-proxy:
        lib:
          http-proxy:
            passes: {}
      http-proxy-agent:
        dist: {}
      http-proxy-middleware:
        dist:
          handlers: {}
      https-proxy-agent:
        dist: {}
      human-signals:
        build:
          src: {}
      iconv-lite:
        .github: {}
        .idea:
          codeStyles: {}
          inspectionProfiles: {}
        encodings:
          tables: {}
        lib: {}
      icss-utils:
        src: {}
      idb:
        build: {}
      identity-obj-proxy:
        src:
          __tests__: {}
          test-redirections: {}
      ignore: {}
      immer:
        compat:
          pre-3.7:
            dist: {}
        dist:
          core: {}
          plugins: {}
          types: {}
          utils: {}
        src:
          core: {}
          plugins: {}
          types: {}
          utils: {}
      import-fresh:
        node_modules:
          resolve-from: {}
      import-local:
        fixtures: {}
      imurmurhash: {}
      indent-string: {}
      inflight: {}
      inherits: {}
      ini: {}
      inline-style-parser:
        dist: {}
      internal-slot:
        .github: {}
        test: {}
      invariant: {}
      ip-address:
        dist:
          v4: {}
          v6: {}
        node_modules:
          sprintf-js:
            dist: {}
            src: {}
        src:
          v4: {}
          v6: {}
      ipaddr.js:
        lib: {}
      is-alphabetical: {}
      is-alphanumerical: {}
      is-arguments:
        .github: {}
        test: {}
      is-array-buffer:
        .github: {}
        test: {}
      is-arrayish: {}
      is-async-function:
        test: {}
      is-bigint:
        .github: {}
        test: {}
      is-binary-path: {}
      is-boolean-object:
        .github: {}
        test: {}
      is-callable:
        .github: {}
        test: {}
      is-core-module:
        test: {}
      is-data-view:
        .github: {}
        test: {}
      is-date-object:
        .github: {}
        test: {}
      is-decimal: {}
      is-docker: {}
      is-extglob: {}
      is-finalizationregistry:
        .github: {}
        test: {}
      is-fullwidth-code-point: {}
      is-generator-fn: {}
      is-generator-function:
        test: {}
      is-glob: {}
      is-hexadecimal: {}
      is-map:
        .github: {}
        test: {}
      is-module: {}
      is-negative-zero:
        .github: {}
        test: {}
      is-number: {}
      is-number-object:
        .github: {}
        test: {}
      is-obj: {}
      is-path-inside: {}
      is-plain-obj: {}
      is-potential-custom-element-name: {}
      is-regex:
        test: {}
      is-regexp: {}
      is-root: {}
      is-set:
        .github: {}
        test: {}
      is-shared-array-buffer:
        .github: {}
        test: {}
      is-stream: {}
      is-string:
        .github: {}
        test: {}
      is-symbol:
        .github: {}
        test: {}
      is-typed-array:
        .github: {}
        test: {}
      is-typedarray: {}
      is-weakmap:
        .github: {}
        test: {}
      is-weakref:
        .github: {}
        test: {}
      is-weakset:
        .github: {}
        test: {}
      is-wsl: {}
      isarray: {}
      isexe:
        test: {}
      istanbul-lib-coverage:
        lib: {}
      istanbul-lib-instrument:
        node_modules:
          .bin: {}
          semver:
            bin: {}
        src: {}
      istanbul-lib-report:
        lib: {}
        node_modules:
          has-flag: {}
          make-dir: {}
          supports-color: {}
      istanbul-lib-source-maps:
        lib: {}
        node_modules:
          source-map:
            dist: {}
            lib: {}
      istanbul-reports:
        lib:
          clover: {}
          cobertura: {}
          html:
            assets:
              vendor: {}
          html-spa:
            assets: {}
            src: {}
          json: {}
          json-summary: {}
          lcov: {}
          lcovonly: {}
          none: {}
          teamcity: {}
          text: {}
          text-lcov: {}
          text-summary: {}
      iterator.prototype:
        .github: {}
        test: {}
      jackspeak:
        dist:
          commonjs: {}
          esm: {}
      jake:
        bin: {}
        lib:
          task: {}
          utils: {}
        node_modules:
          ansi-styles: {}
          chalk:
            source: {}
          color-convert: {}
          color-name: {}
          has-flag: {}
          supports-color: {}
        test:
          integration:
            jakelib: {}
          unit: {}
      jest:
        bin: {}
        build: {}
      jest-changed-files:
        build: {}
      jest-circus:
        build:
          legacy-code-todo-rewrite: {}
        node_modules:
          ansi-styles: {}
          chalk:
            source: {}
          color-convert: {}
          color-name: {}
          has-flag: {}
          supports-color: {}
      jest-cli:
        bin: {}
        build:
          cli: {}
          init: {}
        node_modules:
          ansi-styles: {}
          chalk:
            source: {}
          color-convert: {}
          color-name: {}
          has-flag: {}
          supports-color: {}
      jest-config:
        build: {}
        node_modules:
          ansi-styles: {}
          chalk:
            source: {}
          color-convert: {}
          color-name: {}
          has-flag: {}
          supports-color: {}
      jest-diff:
        build: {}
        node_modules:
          ansi-styles: {}
          chalk:
            source: {}
          color-convert: {}
          color-name: {}
          has-flag: {}
          supports-color: {}
      jest-docblock:
        build: {}
      jest-each:
        build:
          table: {}
        node_modules:
          ansi-styles: {}
          chalk:
            source: {}
          color-convert: {}
          color-name: {}
          has-flag: {}
          supports-color: {}
      jest-environment-jsdom:
        build: {}
      jest-environment-node:
        build: {}
      jest-get-type:
        build: {}
      jest-haste-map:
        build:
          crawlers: {}
          lib: {}
          watchers: {}
      jest-jasmine2:
        build:
          jasmine: {}
        node_modules:
          ansi-styles: {}
          chalk:
            source: {}
          color-convert: {}
          color-name: {}
          has-flag: {}
          supports-color: {}
      jest-leak-detector:
        build: {}
      jest-matcher-utils:
        build: {}
        node_modules:
          ansi-styles: {}
          chalk:
            source: {}
          color-convert: {}
          color-name: {}
          has-flag: {}
          supports-color: {}
      jest-message-util:
        build: {}
        node_modules:
          ansi-styles: {}
          chalk:
            source: {}
          color-convert: {}
          color-name: {}
          has-flag: {}
          supports-color: {}
      jest-mock:
        build: {}
      jest-pnp-resolver: {}
      jest-regex-util:
        build: {}
      jest-resolve:
        build: {}
        node_modules:
          ansi-styles: {}
          chalk:
            source: {}
          color-convert: {}
          color-name: {}
          has-flag: {}
          supports-color: {}
      jest-resolve-dependencies:
        build: {}
      jest-runner:
        build: {}
        node_modules:
          ansi-styles: {}
          chalk:
            source: {}
          color-convert: {}
          color-name: {}
          has-flag: {}
          supports-color: {}
      jest-runtime:
        build: {}
        node_modules:
          ansi-styles: {}
          chalk:
            source: {}
          color-convert: {}
          color-name: {}
          has-flag: {}
          supports-color: {}
      jest-serializer:
        build: {}
      jest-snapshot:
        build: {}
        node_modules:
          ansi-styles: {}
          chalk:
            source: {}
          color-convert: {}
          color-name: {}
          has-flag: {}
          supports-color: {}
      jest-util:
        build: {}
        node_modules:
          ansi-styles: {}
          chalk:
            source: {}
          color-convert: {}
          color-name: {}
          has-flag: {}
          supports-color: {}
      jest-validate:
        build: {}
        node_modules:
          ansi-styles: {}
          chalk:
            source: {}
          color-convert: {}
          color-name: {}
          has-flag: {}
          supports-color: {}
      jest-watch-typeahead:
        build:
          file_name_plugin: {}
          lib: {}
          test_name_plugin: {}
          types: {}
        node_modules:
          '@jest':
            console:
              build: {}
              node_modules:
                slash: {}
            test-result:
              build: {}
            types:
              build: {}
          '@types':
            yargs: {}
          ansi-styles: {}
          chalk:
            source: {}
          color-convert: {}
          color-name: {}
          emittery: {}
          has-flag: {}
          jest-message-util:
            build: {}
            node_modules:
              slash: {}
          jest-regex-util:
            build: {}
          jest-util:
            build: {}
          jest-watcher:
            build:
              lib: {}
            node_modules:
              string-length: {}
              strip-ansi: {}
          pretty-format:
            build:
              plugins:
                lib: {}
            node_modules:
              ansi-styles: {}
          react-is:
            cjs: {}
            umd: {}
          slash: {}
          string-length:
            node_modules:
              char-regex: {}
          strip-ansi:
            node_modules:
              ansi-regex: {}
          supports-color: {}
      jest-watcher:
        build:
          lib: {}
        node_modules:
          ansi-styles: {}
          chalk:
            source: {}
          color-convert: {}
          color-name: {}
          has-flag: {}
          supports-color: {}
      jest-worker:
        build:
          base: {}
          workers: {}
        node_modules:
          has-flag: {}
          supports-color: {}
      jiti:
        bin: {}
        dist:
          plugins: {}
        lib: {}
      js-git:
        art: {}
        doc:
          lib: {}
          mixins: {}
        lib: {}
        mixins: {}
        net: {}
        test: {}
      js-tokens: {}
      js-yaml:
        bin: {}
        dist: {}
        lib:
          js-yaml:
            schema: {}
            type:
              js: {}
      jsbn:
        test: {}
      jsdom:
        lib:
          jsdom:
            browser:
              parser: {}
              resources: {}
            level2: {}
            level3: {}
            living:
              aborting: {}
              attributes: {}
              constraint-validation: {}
              cssom: {}
              custom-elements: {}
              domparsing: {}
              events: {}
              fetch: {}
              file-api: {}
              generated: {}
              helpers:
                svg: {}
              hr-time: {}
              mutation-observer: {}
              navigator: {}
              nodes: {}
              range: {}
              selection: {}
              svg: {}
              traversal: {}
              websockets: {}
              webstorage: {}
              window: {}
              xhr: {}
      jsesc:
        bin: {}
        man: {}
      json-buffer:
        test: {}
      json-parse-even-better-errors: {}
      json-schema:
        lib: {}
      json-schema-traverse:
        spec:
          fixtures: {}
      json-stable-stringify-without-jsonify:
        example: {}
        test: {}
      json-stringify-safe:
        test: {}
      json5:
        dist: {}
        lib: {}
      jsonfile: {}
      jsonpath:
        bin: {}
        generated: {}
        include: {}
        lib: {}
        node_modules:
          .bin: {}
          esprima:
            bin: {}
            test: {}
        test:
          data: {}
      jsonpointer: {}
      jsx-ast-utils:
        .github: {}
        __tests__:
          src: {}
        lib:
          values:
            expressions: {}
        src:
          values:
            expressions: {}
      keyv:
        src: {}
      kind-of: {}
      kleur: {}
      klona:
        dist: {}
        full: {}
        json: {}
        lite: {}
      language-subtag-registry:
        data:
          json: {}
      language-tags:
        lib: {}
      launch-editor:
        editor-info: {}
      lazy:
        test: {}
      leven: {}
      levn:
        lib: {}
      lilconfig:
        dist: {}
      lines-and-columns:
        build: {}
      loader-runner:
        lib: {}
      loader-utils:
        lib:
          hash: {}
      locate-path: {}
      lodash:
        fp: {}
      lodash.debounce: {}
      lodash.memoize: {}
      lodash.merge: {}
      lodash.sortby: {}
      lodash.uniq: {}
      log-driver: {}
      longest-streak: {}
      loose-envify: {}
      lower-case:
        dist: {}
        dist.es2015: {}
      lowlight:
        lib: {}
      lru-cache: {}
      lz-string:
        bin: {}
        libs: {}
        reference: {}
        tests:
          lib:
            jasmine-1.3.1: {}
        typings: {}
      magic-string:
        dist: {}
      make-dir:
        node_modules:
          .bin: {}
          semver:
            bin: {}
      makeerror:
        lib: {}
      mdast-util-from-markdown:
        dev:
          lib: {}
        lib: {}
      mdast-util-mdx-expression:
        lib: {}
      mdast-util-mdx-jsx:
        lib: {}
      mdast-util-mdxjs-esm:
        lib: {}
      mdast-util-phrasing:
        lib: {}
      mdast-util-to-hast:
        lib:
          handlers: {}
      mdast-util-to-markdown:
        lib:
          handle: {}
          util: {}
      mdast-util-to-string:
        lib: {}
      mdn-data:
        api: {}
        css: {}
        l10n: {}
      media-typer: {}
      memfs:
        lib:
          internal: {}
      merge-descriptors: {}
      merge-stream: {}
      merge2: {}
      methods: {}
      micromark:
        dev:
          lib:
            initialize: {}
        lib:
          initialize: {}
      micromark-core-commonmark:
        dev:
          lib: {}
        lib: {}
      micromark-factory-destination:
        dev: {}
      micromark-factory-label:
        dev: {}
      micromark-factory-space:
        dev: {}
      micromark-factory-title:
        dev: {}
      micromark-factory-whitespace:
        dev: {}
      micromark-util-character:
        dev: {}
      micromark-util-chunked:
        dev: {}
      micromark-util-classify-character:
        dev: {}
      micromark-util-combine-extensions: {}
      micromark-util-decode-numeric-character-reference:
        dev: {}
      micromark-util-decode-string:
        dev: {}
      micromark-util-encode: {}
      micromark-util-html-tag-name: {}
      micromark-util-normalize-identifier:
        dev: {}
      micromark-util-resolve-all: {}
      micromark-util-sanitize-uri:
        dev: {}
      micromark-util-subtokenize:
        dev:
          lib: {}
        lib: {}
      micromark-util-symbol:
        lib: {}
      micromark-util-types: {}
      micromatch: {}
      mime:
        src: {}
      mime-db: {}
      mime-types: {}
      mimic-fn: {}
      min-indent: {}
      mini-css-extract-plugin:
        dist:
          hmr: {}
        node_modules:
          ajv:
            dist:
              compile:
                codegen: {}
                jtd: {}
                validate: {}
              refs:
                json-schema-2019-09:
                  meta: {}
                json-schema-2020-12:
                  meta: {}
              runtime: {}
              standalone: {}
              types: {}
              vocabularies:
                applicator: {}
                core: {}
                discriminator: {}
                dynamic: {}
                format: {}
                jtd: {}
                unevaluated: {}
                validation: {}
            lib:
              compile:
                codegen: {}
                jtd: {}
                validate: {}
              refs:
                json-schema-2019-09:
                  meta: {}
                json-schema-2020-12:
                  meta: {}
              runtime: {}
              standalone: {}
              types: {}
              vocabularies:
                applicator: {}
                core: {}
                discriminator: {}
                dynamic: {}
                format: {}
                jtd: {}
                unevaluated: {}
                validation: {}
          ajv-keywords:
            dist:
              definitions: {}
              keywords: {}
            src:
              definitions: {}
              keywords: {}
          json-schema-traverse:
            .github:
              workflows: {}
            spec:
              fixtures: {}
          schema-utils:
            declarations:
              keywords: {}
              util: {}
            dist:
              keywords: {}
              util: {}
        types:
          hmr: {}
      minimalistic-assert: {}
      minimatch: {}
      minimist:
        .github: {}
        example: {}
        test: {}
      minipass:
        dist:
          commonjs: {}
          esm: {}
      mkdirp:
        bin: {}
      module-details-from-path: {}
      ms: {}
      multicast-dns: {}
      mute-stream: {}
      mz: {}
      nanoid:
        async: {}
        bin: {}
        non-secure: {}
        url-alphabet: {}
      natural-compare: {}
      natural-compare-lite: {}
      needle:
        bin: {}
        examples: {}
        lib: {}
        node_modules:
          debug:
            src: {}
          iconv-lite:
            encodings:
              tables: {}
            lib: {}
        test:
          utils: {}
      negotiator:
        lib: {}
      neo-async: {}
      netmask:
        example: {}
        lib: {}
        test: {}
        tests: {}
      no-case:
        dist: {}
        dist.es2015: {}
      node-forge:
        dist: {}
        flash:
          swf: {}
        lib: {}
      node-int64: {}
      node-releases:
        data:
          processed: {}
          release-schedule: {}
      normalize-path: {}
      normalize-range: {}
      normalize-url: {}
      npm-run-path: {}
      nssocket:
        examples: {}
        lib: {}
        node_modules:
          eventemitter2:
            lib: {}
        test:
          fixtures: {}
      nth-check:
        lib:
          esm: {}
      nwsapi:
        dist: {}
        src:
          modules: {}
      object-assign: {}
      object-hash:
        dist: {}
      object-inspect:
        .github: {}
        example: {}
        test:
          browser: {}
      object-is:
        test: {}
      object-keys:
        test: {}
      object.assign:
        .github: {}
        dist: {}
        test: {}
      object.entries:
        test: {}
      object.fromentries:
        test: {}
      object.getownpropertydescriptors:
        test: {}
      object.groupby:
        .github: {}
        test: {}
      object.hasown:
        .github: {}
        test: {}
      object.values:
        test: {}
      obuf:
        test: {}
      on-finished: {}
      on-headers: {}
      once: {}
      onetime: {}
      open: {}
      optionator:
        lib: {}
      p-limit: {}
      p-locate: {}
      p-retry: {}
      p-try: {}
      pac-proxy-agent:
        dist: {}
        node_modules:
          agent-base:
            dist: {}
          http-proxy-agent:
            dist: {}
          https-proxy-agent:
            dist: {}
      pac-resolver:
        dist: {}
      pako:
        dist: {}
        lib:
          utils: {}
          zlib: {}
      param-case:
        dist: {}
        dist.es2015: {}
      parent-module: {}
      parse-entities:
        lib: {}
        node_modules:
          '@types':
            unist: {}
      parse-json: {}
      parse5:
        lib:
          common: {}
          extensions:
            error-reporting: {}
            location-info: {}
            position-tracking: {}
          parser: {}
          serializer: {}
          tokenizer: {}
          tree-adapters: {}
          utils: {}
      parseurl: {}
      pascal-case:
        dist: {}
        dist.es2015: {}
      path-exists: {}
      path-is-absolute: {}
      path-key: {}
      path-parse: {}
      path-scurry:
        dist:
          commonjs: {}
          esm: {}
        node_modules:
          lru-cache:
            dist:
              commonjs: {}
              esm: {}
      path-to-regexp: {}
      path-type: {}
      performance-now:
        lib: {}
        src: {}
        test:
          scripts: {}
      picocolors: {}
      picomatch:
        lib: {}
      pidusage:
        lib:
          helpers: {}
      pify: {}
      pirates:
        lib: {}
      pkg-dir:
        node_modules:
          find-up: {}
          locate-path: {}
          p-limit: {}
          p-locate: {}
      pkg-up:
        node_modules:
          find-up: {}
          locate-path: {}
          p-limit: {}
          p-locate: {}
          path-exists: {}
      pm2:
        bin: {}
        lib:
          API:
            ExtraMgmt: {}
            Modules: {}
            UX: {}
            pm2-plus:
              auth-strategies: {}
              pres: {}
          God: {}
          binaries: {}
          templates:
            Dockerfiles: {}
            init-scripts: {}
            logrotate.d: {}
            sample-apps:
              http-server: {}
              pm2-plus-metrics-actions: {}
              python-app: {}
          tools: {}
        node_modules:
          .bin: {}
          ansi-styles: {}
          chalk:
            source: {}
          color-convert: {}
          color-name: {}
          commander:
            typings: {}
          has-flag: {}
          mkdirp:
            bin: {}
            lib: {}
          sprintf-js:
            dist: {}
            src: {}
          supports-color: {}
        types: {}
      pm2-axon:
        lib:
          configurable:
            lib: {}
          plugins: {}
          sockets: {}
        node_modules:
          escape-string-regexp: {}
      pm2-axon-rpc:
        lib: {}
      pm2-deploy: {}
      pm2-multimeter:
        example: {}
        lib: {}
      pm2-sysmonit:
        node_modules:
          pidusage:
            lib:
              helpers: {}
        src: {}
      possible-typed-array-names:
        .github: {}
        test: {}
      postcss:
        lib: {}
      postcss-attribute-case-insensitive:
        dist: {}
      postcss-browser-comments: {}
      postcss-calc:
        src:
          __tests__: {}
          lib: {}
        types:
          lib: {}
      postcss-clamp: {}
      postcss-color-functional-notation:
        dist: {}
      postcss-color-hex-alpha:
        dist: {}
      postcss-color-rebeccapurple:
        dist: {}
      postcss-colormin:
        src: {}
        types: {}
      postcss-convert-values:
        src:
          lib: {}
        types:
          lib: {}
      postcss-custom-media:
        dist: {}
      postcss-custom-properties:
        dist:
          lib: {}
      postcss-custom-selectors:
        dist: {}
      postcss-dir-pseudo-class:
        dist: {}
      postcss-discard-comments:
        src:
          lib: {}
        types:
          lib: {}
      postcss-discard-duplicates:
        src: {}
        types: {}
      postcss-discard-empty:
        src: {}
        types: {}
      postcss-discard-overridden:
        src: {}
      postcss-double-position-gradients:
        dist: {}
      postcss-env-function:
        dist: {}
      postcss-flexbugs-fixes:
        bugs: {}
      postcss-focus-visible:
        dist: {}
      postcss-focus-within:
        dist: {}
      postcss-font-variant: {}
      postcss-gap-properties:
        dist: {}
      postcss-image-set-function:
        dist:
          lib: {}
      postcss-import:
        lib: {}
      postcss-initial:
        .github:
          workflows: {}
        .vscode: {}
        lib: {}
        '~':
          .config:
            configstore: {}
      postcss-js: {}
      postcss-lab-function:
        dist:
          css-color-4: {}
      postcss-load-config:
        node_modules:
          .bin: {}
          lilconfig:
            src: {}
          yaml:
            browser:
              dist:
                compose: {}
                doc: {}
                node_modules:
                  tslib: {}
                nodes: {}
                parse: {}
                schema:
                  common: {}
                  core: {}
                  json: {}
                  yaml-1.1: {}
                stringify: {}
            dist:
              compose: {}
              doc: {}
              nodes: {}
              parse: {}
              schema:
                common: {}
                core: {}
                json: {}
                yaml-1.1: {}
              stringify: {}
        src: {}
      postcss-loader:
        dist: {}
      postcss-logical:
        dist: {}
      postcss-media-minmax: {}
      postcss-merge-longhand:
        src:
          lib:
            decl: {}
        types:
          lib:
            decl: {}
      postcss-merge-rules:
        src:
          lib: {}
        types:
          lib: {}
      postcss-minify-font-values:
        src:
          lib: {}
        types:
          lib: {}
      postcss-minify-gradients:
        src: {}
        types: {}
      postcss-minify-params:
        src: {}
        types: {}
      postcss-minify-selectors:
        src:
          lib: {}
        types:
          lib: {}
      postcss-modules-extract-imports:
        src: {}
      postcss-modules-local-by-default:
        src: {}
      postcss-modules-scope:
        src: {}
      postcss-modules-values:
        src: {}
      postcss-nested: {}
      postcss-nesting:
        dist:
          lib:
            merge-selectors: {}
      postcss-normalize: {}
      postcss-normalize-charset:
        src: {}
        types: {}
      postcss-normalize-display-values:
        src:
          lib: {}
        types:
          lib: {}
      postcss-normalize-positions:
        src: {}
        types: {}
      postcss-normalize-repeat-style:
        src:
          lib: {}
        types:
          lib: {}
      postcss-normalize-string:
        src: {}
        types: {}
      postcss-normalize-timing-functions:
        src: {}
        types: {}
      postcss-normalize-unicode:
        src: {}
        types: {}
      postcss-normalize-url:
        src: {}
        types: {}
      postcss-normalize-whitespace:
        src: {}
        types: {}
      postcss-opacity-percentage: {}
      postcss-ordered-values:
        src:
          lib: {}
          rules: {}
        types:
          lib: {}
          rules: {}
      postcss-overflow-shorthand:
        dist: {}
      postcss-page-break: {}
      postcss-place:
        dist: {}
      postcss-preset-env:
        dist: {}
      postcss-pseudo-class-any-link:
        dist: {}
      postcss-reduce-initial:
        src:
          data: {}
        types: {}
      postcss-reduce-transforms:
        src: {}
        types: {}
      postcss-replace-overflow-wrap: {}
      postcss-selector-not:
        dist: {}
      postcss-selector-parser:
        dist:
          selectors: {}
          util: {}
      postcss-svgo:
        node_modules:
          .bin: {}
          commander:
            typings: {}
          css-tree:
            data: {}
            dist: {}
            lib:
              common: {}
              convertor: {}
              definition-syntax: {}
              generator: {}
              lexer: {}
              parser: {}
              syntax:
                atrule: {}
                config: {}
                function: {}
                node: {}
                pseudo:
                  common: {}
                scope: {}
              tokenizer: {}
              utils: {}
              walker: {}
          mdn-data:
            api: {}
            css: {}
            l10n: {}
          source-map:
            dist: {}
            lib: {}
          svgo:
            bin: {}
            dist: {}
            lib:
              svgo: {}
            plugins: {}
        src:
          lib: {}
        types:
          lib: {}
      postcss-unique-selectors:
        src: {}
        types: {}
      postcss-value-parser:
        lib: {}
      prelude-ls:
        lib: {}
      pretty-bytes: {}
      pretty-error:
        .github:
          workflows: {}
        lib: {}
        src: {}
        test: {}
      pretty-format:
        build:
          plugins:
            lib: {}
        node_modules:
          ansi-styles: {}
      prismjs:
        components: {}
        plugins:
          autolinker: {}
          autoloader: {}
          command-line: {}
          copy-to-clipboard: {}
          custom-class: {}
          data-uri-highlight: {}
          diff-highlight: {}
          download-button: {}
          file-highlight: {}
          filter-highlight-all: {}
          highlight-keywords: {}
          inline-color: {}
          jsonp-highlight: {}
          keep-markup: {}
          line-highlight: {}
          line-numbers: {}
          match-braces: {}
          normalize-whitespace: {}
          previewers: {}
          remove-initial-line-feed: {}
          show-invisibles: {}
          show-language: {}
          toolbar: {}
          treeview: {}
          unescaped-markup: {}
          wpd: {}
        themes: {}
      process-nextick-args: {}
      promise:
        domains: {}
        lib: {}
        setimmediate: {}
        src: {}
      promptly:
        test: {}
      prompts:
        dist:
          dateparts: {}
          elements: {}
          util: {}
        lib:
          dateparts: {}
          elements: {}
          util: {}
      prop-types:
        lib: {}
        node_modules:
          react-is:
            cjs: {}
            umd: {}
      prop-types-extra:
        lib:
          utils: {}
        node_modules:
          react-is:
            cjs: {}
            umd: {}
      property-information:
        lib:
          util: {}
      proxy-addr:
        node_modules:
          ipaddr.js:
            lib: {}
      proxy-agent:
        dist: {}
        node_modules:
          agent-base:
            dist: {}
          http-proxy-agent:
            dist: {}
          https-proxy-agent:
            dist: {}
          lru-cache: {}
      proxy-from-env: {}
      psl:
        data: {}
        dist: {}
      punycode: {}
      q: {}
      qs:
        .github: {}
        dist: {}
        lib: {}
        test: {}
      querystringify: {}
      queue-microtask: {}
      raf: {}
      randombytes: {}
      range-parser: {}
      raw-body:
        node_modules:
          bytes: {}
          iconv-lite:
            encodings:
              tables: {}
            lib: {}
      react:
        cjs: {}
        umd: {}
      react-app-polyfill:
        node_modules:
          regenerator-runtime: {}
      react-bootstrap:
        AbstractModalHeader: {}
        Accordion: {}
        AccordionBody: {}
        AccordionButton: {}
        AccordionCollapse: {}
        AccordionContext: {}
        AccordionHeader: {}
        AccordionItem: {}
        AccordionItemContext: {}
        Alert: {}
        AlertHeading: {}
        AlertLink: {}
        Anchor: {}
        Badge: {}
        BootstrapModalManager: {}
        Breadcrumb: {}
        BreadcrumbItem: {}
        Button: {}
        ButtonGroup: {}
        ButtonToolbar: {}
        Card: {}
        CardBody: {}
        CardFooter: {}
        CardGroup: {}
        CardHeader: {}
        CardHeaderContext: {}
        CardImg: {}
        CardImgOverlay: {}
        CardLink: {}
        CardSubtitle: {}
        CardText: {}
        CardTitle: {}
        Carousel: {}
        CarouselCaption: {}
        CarouselItem: {}
        CloseButton: {}
        Col: {}
        Collapse: {}
        Container: {}
        Dropdown: {}
        DropdownButton: {}
        DropdownContext: {}
        DropdownDivider: {}
        DropdownHeader: {}
        DropdownItem: {}
        DropdownItemText: {}
        DropdownMenu: {}
        DropdownToggle: {}
        ElementChildren: {}
        Fade: {}
        Feedback: {}
        Figure: {}
        FigureCaption: {}
        FigureImage: {}
        FloatingLabel: {}
        Form: {}
        FormCheck: {}
        FormCheckInput: {}
        FormCheckLabel: {}
        FormContext: {}
        FormControl: {}
        FormFloating: {}
        FormGroup: {}
        FormLabel: {}
        FormRange: {}
        FormSelect: {}
        FormText: {}
        Image: {}
        InputGroup: {}
        InputGroupContext: {}
        InputGroupText: {}
        ListGroup: {}
        ListGroupItem: {}
        Modal: {}
        ModalBody: {}
        ModalContext: {}
        ModalDialog: {}
        ModalFooter: {}
        ModalHeader: {}
        ModalTitle: {}
        Nav: {}
        NavContext: {}
        NavDropdown: {}
        NavItem: {}
        NavLink: {}
        Navbar: {}
        NavbarBrand: {}
        NavbarCollapse: {}
        NavbarContext: {}
        NavbarOffcanvas: {}
        NavbarText: {}
        NavbarToggle: {}
        Offcanvas: {}
        OffcanvasBody: {}
        OffcanvasHeader: {}
        OffcanvasTitle: {}
        OffcanvasToggling: {}
        Overlay: {}
        OverlayTrigger: {}
        PageItem: {}
        Pagination: {}
        Placeholder: {}
        PlaceholderButton: {}
        Popover: {}
        PopoverBody: {}
        PopoverHeader: {}
        ProgressBar: {}
        Ratio: {}
        Row: {}
        SSRProvider: {}
        Spinner: {}
        SplitButton: {}
        Stack: {}
        Switch: {}
        Tab: {}
        TabContainer: {}
        TabContent: {}
        TabPane: {}
        Table: {}
        Tabs: {}
        ThemeProvider: {}
        Toast: {}
        ToastBody: {}
        ToastContainer: {}
        ToastContext: {}
        ToastFade: {}
        ToastHeader: {}
        ToggleButton: {}
        ToggleButtonGroup: {}
        Tooltip: {}
        TransitionWrapper: {}
        cjs: {}
        createChainedFunction: {}
        createUtilityClasses: {}
        createWithBsPrefix: {}
        dist: {}
        divWithClassName: {}
        esm: {}
        getInitialPopperStyles: {}
        getTabTransitionComponent: {}
        helpers: {}
        safeFindDOMNode: {}
        transitionEndListener: {}
        triggerBrowserReflow: {}
        types: {}
        useOverlayOffset: {}
        usePlaceholder: {}
        useWrappedRefWithWarning: {}
      react-bootstrap-icons:
        _demo: {}
        build: {}
        dist:
          icons: {}
      react-dev-utils:
        node_modules:
          ansi-styles: {}
          chalk:
            source: {}
          color-convert: {}
          color-name: {}
          escape-string-regexp: {}
          has-flag: {}
          loader-utils:
            lib:
              hash: {}
          supports-color: {}
      react-dom:
        cjs: {}
        umd: {}
      react-error-overlay:
        lib: {}
      react-is:
        cjs: {}
        umd: {}
      react-lifecycles-compat: {}
      react-markdown:
        lib: {}
      react-refresh:
        cjs: {}
      react-router:
        dist:
          lib: {}
          umd: {}
      react-router-dom:
        dist:
          umd: {}
      react-scripts:
        bin: {}
        config:
          jest: {}
          webpack:
            persistentCache: {}
        lib: {}
        scripts:
          utils: {}
        template: {}
        template-typescript: {}
      react-syntax-highlighter:
        .github:
          ISSUE_TEMPLATE: {}
          workflows: {}
        dist:
          cjs:
            async-languages: {}
            languages:
              hljs: {}
              prism: {}
            styles:
              hljs: {}
              prism: {}
          esm:
            async-languages: {}
            languages:
              hljs: {}
              prism: {}
            styles:
              hljs: {}
              prism: {}
        scripts: {}
        src:
          async-languages: {}
          languages:
            hljs: {}
            prism: {}
          styles:
            hljs: {}
            prism: {}
      react-transition-group:
        CSSTransition: {}
        ReplaceTransition: {}
        SwitchTransition: {}
        Transition: {}
        TransitionGroup: {}
        TransitionGroupContext: {}
        cjs:
          utils: {}
        config: {}
        dist: {}
        esm:
          utils: {}
      read:
        lib: {}
      read-cache: {}
      readable-stream:
        lib:
          internal:
            streams: {}
      readdirp: {}
      recursive-readdir: {}
      redent: {}
      reflect.getprototypeof:
        test: {}
      refractor:
        lang: {}
        node_modules:
          character-entities: {}
          character-entities-legacy: {}
          character-reference-invalid: {}
          is-alphabetical: {}
          is-alphanumerical: {}
          is-decimal: {}
          is-hexadecimal: {}
          parse-entities:
            types: {}
          prismjs:
            components: {}
            plugins:
              autolinker: {}
              autoloader: {}
              command-line: {}
              copy-to-clipboard: {}
              custom-class: {}
              data-uri-highlight: {}
              diff-highlight: {}
              download-button: {}
              file-highlight: {}
              filter-highlight-all: {}
              highlight-keywords: {}
              inline-color: {}
              jsonp-highlight: {}
              keep-markup: {}
              line-highlight: {}
              line-numbers: {}
              match-braces: {}
              normalize-whitespace: {}
              previewers: {}
              remove-initial-line-feed: {}
              show-invisibles: {}
              show-language: {}
              toolbar: {}
              treeview: {}
              unescaped-markup: {}
              wpd: {}
            themes: {}
      regenerate: {}
      regenerate-unicode-properties:
        Binary_Property: {}
        General_Category: {}
        Property_of_Strings: {}
        Script: {}
        Script_Extensions: {}
      regenerator-runtime: {}
      regenerator-transform:
        lib: {}
        src: {}
      regex-parser:
        lib:
          typings: {}
      regexp.prototype.flags:
        test: {}
      regexpu-core:
        data: {}
      regjsparser:
        bin: {}
        node_modules:
          .bin: {}
          jsesc:
            bin: {}
            man: {}
      relateurl:
        lib:
          parse: {}
          relate: {}
          util: {}
      remark-parse:
        lib: {}
      remark-rehype:
        lib: {}
      renderkid:
        docs:
          images: {}
        lib:
          ansiPainter: {}
          layout:
            block:
              blockAppendor: {}
              blockPrependor: {}
              lineAppendor: {}
              linePrependor: {}
              lineWrapper: {}
          renderKid:
            styleApplier: {}
            styles:
              rule:
                declarationBlock: {}
      require-directory: {}
      require-from-string: {}
      require-in-the-middle: {}
      requires-port: {}
      resolve:
        .github: {}
        bin: {}
        example: {}
        lib: {}
        test:
          dotdot:
            abc: {}
          module_dir:
            xmodules:
              aaa: {}
            ymodules:
              aaa: {}
            zmodules:
              bbb: {}
          node_path:
            x:
              aaa: {}
              ccc: {}
            y:
              bbb: {}
              ccc: {}
          pathfilter:
            deep_ref: {}
          precedence:
            aaa: {}
            bbb: {}
          resolver:
            baz: {}
            browser_field: {}
            dot_main: {}
            dot_slash_main: {}
            false_main: {}
            incorrect_main: {}
            invalid_main: {}
            multirepo:
              packages:
                package-a: {}
                package-b: {}
            nested_symlinks:
              mylib: {}
            other_path:
              lib: {}
            quux:
              foo: {}
            same_names:
              foo: {}
            symlinked:
              _:
                node_modules: {}
                symlink_target: {}
              package: {}
            without_basedir: {}
          shadowed_core:
            node_modules:
              util: {}
      resolve-cwd: {}
      resolve-from: {}
      resolve-url-loader:
        docs: {}
        lib:
          engine: {}
          join-function: {}
        node_modules:
          convert-source-map: {}
          picocolors: {}
          postcss:
            lib: {}
          source-map:
            dist: {}
            lib: {}
      resolve.exports:
        dist: {}
      retry:
        example: {}
        lib: {}
      reusify:
        benchmarks: {}
      rimraf: {}
      rollup:
        dist:
          bin: {}
          es:
            shared: {}
          shared: {}
      rollup-plugin-terser:
        node_modules:
          has-flag: {}
          jest-worker:
            build:
              base: {}
              workers: {}
          serialize-javascript:
            .vscode: {}
          supports-color: {}
      run-parallel: {}
      run-series: {}
      safe-array-concat:
        .github: {}
        test: {}
      safe-buffer: {}
      safe-regex-test:
        .github: {}
        test: {}
      safer-buffer: {}
      sanitize.css: {}
      sass-loader:
        dist: {}
      sax:
        lib: {}
      saxes: {}
      scheduler:
        cjs: {}
        umd: {}
      schema-utils:
        declarations:
          keywords: {}
          util: {}
        dist:
          keywords: {}
          util: {}
      select-hose:
        lib: {}
        test: {}
      selfsigned:
        test: {}
      semver:
        bin: {}
        classes: {}
        functions: {}
        internal: {}
        node_modules:
          lru-cache: {}
          yallist: {}
        ranges: {}
      send:
        node_modules:
          debug:
            node_modules:
              ms: {}
            src: {}
          ms: {}
      serialize-javascript: {}
      serve-index:
        node_modules:
          debug:
            src: {}
          depd:
            lib:
              browser: {}
              compat: {}
          http-errors: {}
          inherits: {}
          ms: {}
          setprototypeof: {}
          statuses: {}
        public:
          icons: {}
      serve-static: {}
      set-function-length:
        .github: {}
      set-function-name:
        .github: {}
      setprototypeof:
        test: {}
      shebang-command: {}
      shebang-regex: {}
      shell-quote:
        .github: {}
        example: {}
        test: {}
      shimmer:
        test: {}
      side-channel:
        .github: {}
        test: {}
      signal-exit: {}
      sisteransi:
        src: {}
      slash: {}
      smart-buffer:
        build: {}
        docs: {}
        typings: {}
      socket.io-client:
        build:
          cjs:
            contrib: {}
          esm:
            contrib: {}
          esm-debug:
            contrib: {}
        dist: {}
      socket.io-parser:
        build:
          cjs: {}
          esm: {}
          esm-debug: {}
      sockjs:
        lib: {}
      socks:
        build:
          client: {}
          common: {}
        docs:
          examples:
            javascript: {}
            typescript: {}
        typings:
          client: {}
          common: {}
      socks-proxy-agent:
        dist: {}
        node_modules:
          agent-base:
            dist: {}
      source-list-map:
        lib: {}
      source-map:
        dist: {}
        lib: {}
      source-map-js:
        lib: {}
      source-map-loader:
        dist: {}
      source-map-support:
        node_modules:
          source-map:
            dist: {}
            lib: {}
      sourcemap-codec:
        dist:
          types: {}
      space-separated-tokens: {}
      spdy:
        lib:
          spdy: {}
        test: {}
      spdy-transport:
        lib:
          spdy-transport:
            protocol:
              base: {}
              http2: {}
              spdy: {}
      sprintf-js:
        demo: {}
        dist: {}
        src: {}
        test: {}
      stable: {}
      stack-utils:
        node_modules:
          escape-string-regexp: {}
      stackframe:
        dist: {}
      static-eval:
        example: {}
        node_modules:
          .bin: {}
          escodegen:
            bin: {}
          estraverse: {}
          levn:
            lib: {}
          optionator:
            lib: {}
          prelude-ls:
            lib: {}
          source-map:
            dist: {}
            lib: {}
          type-check:
            lib: {}
        test: {}
      statuses: {}
      stop-iteration-iterator:
        .github: {}
        test: {}
      string-length: {}
      string-natural-compare: {}
      string-width:
        node_modules:
          emoji-regex:
            es2015: {}
      string-width-cjs:
        node_modules:
          emoji-regex:
            es2015: {}
      string.prototype.matchall:
        .github: {}
        test: {}
      string.prototype.trim:
        test: {}
      string.prototype.trimend:
        test: {}
      string.prototype.trimstart:
        test: {}
      string_decoder:
        lib: {}
      stringify-entities:
        lib:
          constant: {}
          util: {}
      stringify-object: {}
      strip-ansi: {}
      strip-ansi-cjs: {}
      strip-bom: {}
      strip-comments:
        lib: {}
      strip-final-newline: {}
      strip-indent: {}
      strip-json-comments: {}
      style-loader:
        dist:
          runtime: {}
      style-to-object:
        cjs: {}
        dist: {}
        esm: {}
        src: {}
      stylehacks:
        src:
          dictionary: {}
          plugins: {}
        types:
          dictionary: {}
          plugins: {}
      sucrase:
        bin: {}
        dist:
          esm:
            parser:
              plugins:
                jsx: {}
              tokenizer: {}
              traverser: {}
              util: {}
            transformers: {}
            util: {}
          parser:
            plugins:
              jsx: {}
            tokenizer: {}
            traverser: {}
            util: {}
          transformers: {}
          types:
            parser:
              plugins:
                jsx: {}
              tokenizer: {}
              traverser: {}
              util: {}
            transformers: {}
            util: {}
          util: {}
        node_modules:
          .bin: {}
          brace-expansion:
            .github: {}
          commander:
            typings: {}
          glob:
            dist:
              commonjs: {}
              esm: {}
          minimatch:
            dist:
              commonjs: {}
              esm: {}
        register: {}
        ts-node-plugin: {}
      supports-color: {}
      supports-hyperlinks:
        node_modules:
          has-flag: {}
          supports-color: {}
      supports-preserve-symlinks-flag:
        .github: {}
        test: {}
      svg-parser:
        dist: {}
      svgo:
        bin: {}
        lib:
          svgo: {}
        node_modules:
          css-select:
            lib: {}
          css-what:
            lib: {}
          dom-serializer: {}
          domutils:
            lib: {}
            node_modules:
              domelementtype: {}
            test:
              tests: {}
          nth-check: {}
        plugins: {}
      symbol-tree:
        lib: {}
      systeminformation:
        lib: {}
      tailwindcss:
        lib:
          cli:
            build: {}
            help: {}
            init: {}
          css: {}
          lib: {}
          postcss-plugins:
            nesting: {}
          public: {}
          util: {}
          value-parser: {}
        nesting: {}
        peers: {}
        scripts: {}
        src:
          cli:
            build: {}
            help: {}
            init: {}
          css: {}
          lib: {}
          postcss-plugins:
            nesting: {}
          public: {}
          util: {}
          value-parser: {}
        stubs: {}
        types:
          generated: {}
      tapable:
        lib: {}
      temp-dir: {}
      tempy:
        node_modules:
          type-fest:
            source: {}
      terminal-link: {}
      terser:
        bin: {}
        dist: {}
        lib:
          compress: {}
          utils: {}
        node_modules:
          commander:
            typings: {}
        tools: {}
      terser-webpack-plugin:
        dist: {}
        types: {}
      test-exclude: {}
      text-table:
        example: {}
        test: {}
      thenify: {}
      thenify-all: {}
      throat: {}
      thunky: {}
      tmpl:
        lib: {}
      to-fast-properties: {}
      to-regex-range: {}
      toidentifier: {}
      tough-cookie:
        lib: {}
        node_modules:
          universalify: {}
      tr46:
        lib: {}
      trim-lines: {}
      trough:
        lib: {}
      tryer:
        lib: {}
        src: {}
        test: {}
      ts-interface-checker:
        dist: {}
      tsconfig-paths:
        lib:
          __tests__:
            data: {}
        node_modules:
          .bin: {}
          json5:
            dist: {}
            lib: {}
          strip-bom: {}
        src:
          __tests__:
            data: {}
      tslib:
        modules: {}
      tsutils:
        node_modules:
          tslib:
            modules: {}
            test:
              validateModuleExportsMatchCommonJS: {}
        typeguard:
          '2.8': {}
          '2.9': {}
          '3.0': {}
          '3.2': {}
          next: {}
        util: {}
      tv4:
        lang: {}
      tx2:
        example: {}
        src:
          utils:
            probes: {}
        test: {}
      type-check:
        lib: {}
      type-detect: {}
      type-fest:
        source: {}
        ts41: {}
      type-is: {}
      typed-array-buffer:
        .github: {}
        test: {}
      typed-array-byte-length:
        .github: {}
        test: {}
      typed-array-byte-offset:
        .github: {}
        test: {}
      typed-array-length:
        .github: {}
        test: {}
      typedarray-to-buffer:
        test: {}
      typescript:
        bin: {}
        lib:
          cs: {}
          de: {}
          es: {}
          fr: {}
          it: {}
          ja: {}
          ko: {}
          pl: {}
          pt-br: {}
          ru: {}
          tr: {}
          zh-cn: {}
          zh-tw: {}
      unbox-primitive:
        .github: {}
        test: {}
      uncontrollable:
        lib:
          cjs: {}
          esm: {}
        test: {}
      underscore:
        amd: {}
        cjs: {}
        modules: {}
      undici-types: {}
      unicode-canonical-property-names-ecmascript: {}
      unicode-match-property-ecmascript: {}
      unicode-match-property-value-ecmascript:
        data: {}
      unicode-property-aliases-ecmascript: {}
      unified:
        lib: {}
        node_modules:
          is-plain-obj: {}
      unique-string: {}
      unist-util-is:
        lib: {}
      unist-util-position:
        lib: {}
      unist-util-remove-position:
        lib: {}
      unist-util-stringify-position:
        lib: {}
      unist-util-visit:
        lib: {}
      unist-util-visit-parents:
        lib: {}
      universalify: {}
      unpipe: {}
      unquote: {}
      upath:
        build:
          code: {}
      update-browserslist-db: {}
      uri-js:
        dist:
          es5: {}
          esnext:
            schemes: {}
      url-parse:
        dist: {}
      use-immer:
        dist: {}
      util-deprecate: {}
      util.promisify:
        .github:
          workflows: {}
      utila:
        lib: {}
        test: {}
      utils-merge: {}
      uuid:
        dist:
          bin: {}
          esm-browser: {}
          esm-node: {}
          umd: {}
      v8-to-istanbul:
        lib: {}
        node_modules:
          convert-source-map: {}
      vary: {}
      vfile:
        lib: {}
      vfile-message:
        lib: {}
      vizion:
        lib:
          git: {}
          hg: {}
          svn: {}
        node_modules:
          async:
            dist: {}
            internal: {}
        test:
          fixtures:
            test_hg: {}
            test_svn:
              branches:
                development: {}
              trunk: {}
          functional: {}
          support: {}
          unit: {}
      w3c-hr-time:
        lib: {}
      w3c-xmlserializer:
        lib: {}
      walker:
        lib: {}
      warning: {}
      watchpack:
        lib: {}
      wbuf:
        test: {}
      web-vitals:
        dist:
          modules:
            lib:
              polyfills: {}
        src:
          lib:
            polyfills: {}
      webidl-conversions:
        lib: {}
      webpack:
        bin: {}
        hot: {}
        lib:
          asset: {}
          async-modules: {}
          cache: {}
          config: {}
          container: {}
          css: {}
          debug: {}
          dependencies: {}
          electron: {}
          errors: {}
          esm: {}
          hmr: {}
          ids: {}
          javascript: {}
          json: {}
          library: {}
          logging: {}
          node: {}
          optimize: {}
          performance: {}
          prefetch: {}
          rules: {}
          runtime: {}
          schemes: {}
          serialization: {}
          sharing: {}
          stats: {}
          util:
            hash: {}
          wasm: {}
          wasm-async: {}
          wasm-sync: {}
          web: {}
          webworker: {}
        node_modules:
          eslint-scope:
            lib: {}
          estraverse: {}
        schemas:
          plugins:
            asset: {}
            container: {}
            css: {}
            debug: {}
            ids: {}
            optimize: {}
            schemes: {}
            sharing: {}
      webpack-dev-middleware:
        dist:
          utils: {}
        node_modules:
          ajv:
            dist:
              compile:
                codegen: {}
                jtd: {}
                validate: {}
              refs:
                json-schema-2019-09:
                  meta: {}
                json-schema-2020-12:
                  meta: {}
              runtime: {}
              standalone: {}
              types: {}
              vocabularies:
                applicator: {}
                core: {}
                discriminator: {}
                dynamic: {}
                format: {}
                jtd: {}
                unevaluated: {}
                validation: {}
            lib:
              compile:
                codegen: {}
                jtd: {}
                validate: {}
              refs:
                json-schema-2019-09:
                  meta: {}
                json-schema-2020-12:
                  meta: {}
              runtime: {}
              standalone: {}
              types: {}
              vocabularies:
                applicator: {}
                core: {}
                discriminator: {}
                dynamic: {}
                format: {}
                jtd: {}
                unevaluated: {}
                validation: {}
          ajv-keywords:
            dist:
              definitions: {}
              keywords: {}
            src:
              definitions: {}
              keywords: {}
          json-schema-traverse:
            .github:
              workflows: {}
            spec:
              fixtures: {}
          schema-utils:
            declarations:
              keywords: {}
              util: {}
            dist:
              keywords: {}
              util: {}
        types:
          utils: {}
      webpack-dev-server:
        bin: {}
        client:
          clients: {}
          modules:
            logger: {}
            sockjs-client: {}
          overlay: {}
          utils: {}
        lib:
          servers: {}
        node_modules:
          ajv:
            dist:
              compile:
                codegen: {}
                jtd: {}
                validate: {}
              refs:
                json-schema-2019-09:
                  meta: {}
                json-schema-2020-12:
                  meta: {}
              runtime: {}
              standalone: {}
              types: {}
              vocabularies:
                applicator: {}
                core: {}
                discriminator: {}
                dynamic: {}
                format: {}
                jtd: {}
                unevaluated: {}
                validation: {}
            lib:
              compile:
                codegen: {}
                jtd: {}
                validate: {}
              refs:
                json-schema-2019-09:
                  meta: {}
                json-schema-2020-12:
                  meta: {}
              runtime: {}
              standalone: {}
              types: {}
              vocabularies:
                applicator: {}
                core: {}
                discriminator: {}
                dynamic: {}
                format: {}
                jtd: {}
                unevaluated: {}
                validation: {}
          ajv-keywords:
            dist:
              definitions: {}
              keywords: {}
            src:
              definitions: {}
              keywords: {}
          json-schema-traverse:
            .github:
              workflows: {}
            spec:
              fixtures: {}
          schema-utils:
            declarations:
              keywords: {}
              util: {}
            dist:
              keywords: {}
              util: {}
          ws:
            lib: {}
        types:
          bin: {}
          lib:
            servers: {}
      webpack-manifest-plugin:
        dist: {}
        node_modules:
          source-map:
            dist: {}
            lib: {}
          webpack-sources:
            lib: {}
      webpack-sources:
        lib:
          helpers: {}
      websocket-driver:
        lib:
          websocket:
            driver:
              hybi: {}
      websocket-extensions:
        lib:
          pipeline: {}
      whatwg-encoding:
        lib: {}
        node_modules:
          iconv-lite:
            encodings:
              tables: {}
            lib: {}
      whatwg-fetch:
        dist: {}
      whatwg-mimetype:
        lib: {}
      whatwg-url:
        dist: {}
      which:
        bin: {}
      which-boxed-primitive:
        .github: {}
        test: {}
      which-builtin-type:
        test: {}
      which-collection:
        .github: {}
        test: {}
      which-typed-array:
        .github: {}
        test: {}
      word-wrap: {}
      workbox-background-sync:
        build: {}
        lib: {}
        src:
          lib: {}
      workbox-broadcast-update:
        build: {}
        src:
          utils: {}
        utils: {}
      workbox-build:
        build:
          lib: {}
          schema: {}
          templates: {}
        node_modules:
          '@apideck':
            better-ajv-errors:
              dist:
                lib: {}
                types: {}
              src:
                lib: {}
                types: {}
          ajv:
            dist:
              compile:
                codegen: {}
                jtd: {}
                validate: {}
              refs:
                json-schema-2019-09:
                  meta: {}
                json-schema-2020-12:
                  meta: {}
              runtime: {}
              standalone: {}
              types: {}
              vocabularies:
                applicator: {}
                core: {}
                discriminator: {}
                dynamic: {}
                format: {}
                jtd: {}
                unevaluated: {}
                validation: {}
            lib:
              compile:
                codegen: {}
                jtd: {}
                validate: {}
              refs:
                json-schema-2019-09:
                  meta: {}
                json-schema-2020-12:
                  meta: {}
              runtime: {}
              standalone: {}
              types: {}
              vocabularies:
                applicator: {}
                core: {}
                discriminator: {}
                dynamic: {}
                format: {}
                jtd: {}
                unevaluated: {}
                validation: {}
          fs-extra:
            lib:
              copy: {}
              copy-sync: {}
              empty: {}
              ensure: {}
              fs: {}
              json: {}
              mkdirs: {}
              move: {}
              move-sync: {}
              output: {}
              path-exists: {}
              remove: {}
              util: {}
          json-schema-traverse:
            .github:
              workflows: {}
            spec:
              fixtures: {}
          source-map:
            lib: {}
          tr46:
            lib: {}
          webidl-conversions:
            lib: {}
          whatwg-url:
            lib: {}
        src:
          lib: {}
          schema: {}
          templates: {}
      workbox-cacheable-response:
        build: {}
        src: {}
      workbox-core:
        _private: {}
        build: {}
        models:
          messages: {}
        src:
          _private: {}
          models:
            messages: {}
          utils: {}
        utils: {}
      workbox-expiration:
        build: {}
        models: {}
        src:
          models: {}
      workbox-google-analytics:
        build: {}
        src:
          utils: {}
        utils: {}
      workbox-navigation-preload:
        build: {}
        src: {}
      workbox-precaching:
        build: {}
        src:
          utils: {}
        utils: {}
      workbox-range-requests:
        build: {}
        src:
          utils: {}
        utils: {}
      workbox-recipes:
        build: {}
        src: {}
      workbox-routing:
        build: {}
        src:
          utils: {}
        utils: {}
      workbox-strategies:
        build: {}
        plugins: {}
        src:
          plugins: {}
          utils: {}
        utils: {}
      workbox-streams:
        build: {}
        src:
          utils: {}
        utils: {}
      workbox-sw:
        build: {}
        controllers: {}
      workbox-webpack-plugin:
        build:
          lib: {}
        node_modules:
          source-map:
            dist: {}
            lib: {}
          webpack-sources:
            lib: {}
        src:
          lib: {}
      workbox-window:
        build: {}
        src:
          utils: {}
        utils: {}
      wrap-ansi:
        node_modules:
          ansi-styles: {}
          color-convert: {}
          color-name: {}
      wrap-ansi-cjs:
        node_modules:
          ansi-styles: {}
          color-convert: {}
          color-name: {}
      wrappy: {}
      write-file-atomic: {}
      ws:
        lib: {}
      xml-name-validator:
        lib: {}
      xmlchars:
        xml:
          '1.0': {}
          '1.1': {}
        xmlns:
          '1.0': {}
      xmlhttprequest-ssl:
        example: {}
        lib: {}
        tests: {}
      xtend: {}
      y18n:
        build:
          lib:
            platform-shims: {}
      yallist: {}
      yaml:
        browser:
          dist: {}
          types: {}
        dist: {}
        types: {}
      yamljs:
        bin: {}
        cli: {}
        demo: {}
        dist: {}
        lib:
          Exception: {}
        src:
          Exception: {}
        test:
          lib:
            jasmine-2.0.0: {}
          spec: {}
      yargs:
        build:
          lib:
            typings: {}
            utils: {}
        helpers: {}
        lib:
          platform-shims: {}
        locales: {}
      yargs-parser:
        build:
          lib: {}
      yocto-queue: {}
      zwitch: {}
    public: {}
    src:
      assets:
        link_icons: {}
        panel_icons: {}
        repo_icons: {}
      components:
        controls: {}
        panels: {}
        utils:
          icons: {}
      static: {}
  utils:
    __pycache__: {}
tests:
  test_data:
    data_sources: {}
    trajectories:
      gpt4__swe-agent-test-repo__default_from_url__t-0.00__p-0.95__c-3.00__install-1: {}
      gpt4__swe-agent__test-repo__default_from_url__t-0.00__p-0.95__c-3.00__install-1: {}
      gpt4__swe-bench-dev-easy_first_only__default__t-0.00__p-0.95__c-3.00__install-1:
        patches: {}
trajectories:
  demonstrations:
    human_thought__swe-bench-HumanEvalFix-python__lcb__t-0.00__p-0.95__c-4.00__install-0: {}
    replay__marshmallow-code__marshmallow-1867__default__t-0.20__p-0.95__c-2.00__install-1___install_from_source: {}
    replay__marshmallow-code__marshmallow-1867__default_sys-env_cursors_window100__t-0.20__p-0.95__c-2.00__install-1: {}
    replay__marshmallow-code__marshmallow-1867__default_sys-env_window100__t-0.20__p-0.95__c-2.00__install-1: {}
    replay__marshmallow-code__marshmallow-1867__xml_sys-env_cursors_window100__t-0.20__p-0.95__c-2.00__install-1: {}
    replay__marshmallow-code__marshmallow-1867__xml_sys-env_window100__t-0.20__p-0.95__c-2.00__install-1: {}
  matthewtaruno:
    gpt4__mtaruno__type-like-you__default_from_url__t-0.00__p-0.95__c-3.00__install-1: {}
    gpt4__scikit-learn__scikit-learn__default_from_url__t-0.00__p-0.95__c-3.00__install-1: {}
